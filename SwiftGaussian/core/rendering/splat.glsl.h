#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc -i ./ios-splats/ios-splats/core/rendering/splat.glsl -o ./ios-splats/ios-splats/core/rendering/splat.glsl.h -l metal_ios:metal_sim:metal_macos:hlsl5:glsl310es:glsl410

    Overview:
    =========
    Shader program: 'quad':
        Get shader desc: quad_shader_desc(sg_query_backend());
        Vertex Shader: vs
        Fragment Shader: fs
        Attributes:
            ATTR_quad_position => 0
            ATTR_quad_sorted_index => 1
    Bindings:
        Uniform block 'vs_params':
            C struct: vs_params_t
            Bind slot: UB_vs_params => 0
        Texture 'splat_texture':
            Image type: SG_IMAGETYPE_ARRAY
            Sample type: SG_IMAGESAMPLETYPE_UINT
            Multisampled: false
            Bind slot: VIEW_splat_texture => 1
        Sampler 'splat_sampler':
            Type: SG_SAMPLERTYPE_NONFILTERING
            Bind slot: SMP_splat_sampler => 2
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before splat.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_quad_position (0)
#define ATTR_quad_sorted_index (1)
#define UB_vs_params (0)
#define VIEW_splat_texture (1)
#define SMP_splat_sampler (2)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    float viewMat[16];
    float projMat[16];
    float bounds_min[3];
    uint8_t _pad_140[4];
    float bounds_max[3];
    uint8_t _pad_156[4];
    float bounds_size[3];
    int texture_width;
    int texture_height;
    int splats_per_layer;
    uint8_t _pad_184[8];
} vs_params_t;
#pragma pack(pop)
/*
    #version 410

    struct vs_params
    {
        mat4 viewMat;
        mat4 projMat;
        vec3 bounds_min;
        vec3 bounds_max;
        vec3 bounds_size;
        int texture_width;
        int texture_height;
        int splats_per_layer;
    };

    uniform vs_params _188;

    uniform usampler2DArray splat_texture_splat_sampler;

    layout(location = 1) in uint sorted_index;
    layout(location = 0) out vec4 color;
    layout(location = 0) in vec2 position;
    layout(location = 1) out vec2 quad_coord;

    vec3 octahedral_decode(inout vec2 f)
    {
        f = (f * 2.0) - vec2(1.0);
        float _44 = (1.0 - abs(f.x)) - abs(f.y);
        vec3 _45 = vec3(f.x, f.y, _44);
        float _52 = max(-_44, 0.0);
        vec2 _54 = vec2(_52);
        vec2 _57 = vec2(-_52);
        vec2 _59 = _45.xy;
        bvec2 _63 = greaterThanEqual(_59, vec2(0.0));
        vec2 _67 = _59 + vec2(_63.x ? _57.x : _54.x, _63.y ? _57.y : _54.y);
        vec3 _421 = _45;
        _421.x = _67.x;
        _421.y = _67.y;
        return normalize(_421);
    }

    mat3 quat_to_mat3(vec4 q)
    {
        float _81 = q.x * q.x;
        float _87 = q.y * q.y;
        float _93 = q.z * q.z;
        float _99 = q.x * q.z;
        float _105 = q.x * q.y;
        float _111 = q.y * q.z;
        float _118 = q.w * q.x;
        float _124 = q.w * q.y;
        float _130 = q.w * q.z;
        return mat3(vec3(1.0 - (2.0 * (_87 + _93)), 2.0 * (_105 - _130), 2.0 * (_99 + _124)), vec3(2.0 * (_105 + _130), 1.0 - (2.0 * (_81 + _93)), 2.0 * (_111 - _118)), vec3(2.0 * (_99 - _124), 2.0 * (_111 + _118), 1.0 - (2.0 * (_81 + _87))));
    }

    void main()
    {
        int _182 = int(sorted_index);
        int _193 = _182 / _188.splats_per_layer;
        int _200 = _182 - (_193 * _188.splats_per_layer);
        uvec4 _232 = texelFetch(splat_texture_splat_sampler, ivec3(_200 % _188.texture_width, _200 / _188.texture_width, _193), 0);
        uint _236 = _232.w;
        uint _238 = _236 & 255u;
        if (_238 < 3u)
        {
            gl_Position = vec4(0.0, 0.0, 2.0, 1.0);
            return;
        }
        uint _253 = _232.x;
        uint _264 = _232.y;
        uint _298 = _232.z;
        vec2 param = vec2(float((_264 >> 8u) & 255u), float(_264 & 255u)) * 0.0039215688593685626983642578125;
        vec3 _309 = octahedral_decode(param);
        float _313 = float((_298 >> 24u) & 255u) * 0.0061599859036505222320556640625;
        color = vec4(float((_236 >> 24u) & 255u), float((_236 >> 16u) & 255u), float((_236 >> 8u) & 255u), float(_238)) * 0.0039215688593685626983642578125;
        vec4 param_1 = vec4(_309 * sin(_313), cos(_313));
        gl_Position = _188.projMat * (_188.viewMat * vec4((_188.bounds_min + ((vec3(float((_253 >> 16u) & 65535u), float(_253 & 65535u), float((_264 >> 16u) & 65535u)) * 1.525902189314365386962890625e-05) * _188.bounds_size)) + (quat_to_mat3(param_1) * (vec3(position, 0.0) * exp((vec3(float((_298 >> 16u) & 255u), float((_298 >> 8u) & 255u), float(_298 & 255u)) * 0.0392156876623630523681640625) - vec3(5.0)))), 1.0));
        quad_coord = position;
    }

*/
static const uint8_t vs_source_glsl410[2824] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x76,0x69,0x65,0x77,0x4d,0x61,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x70,0x72,0x6f,0x6a,
    0x4d,0x61,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x62,0x6f,
    0x75,0x6e,0x64,0x73,0x5f,0x6d,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x61,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x73,
    0x69,0x7a,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x77,0x69,0x64,0x74,0x68,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x68,0x65,0x69,0x67,
    0x68,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x73,0x70,0x6c,0x61,
    0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,0x61,0x79,0x65,0x72,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x20,0x5f,0x31,0x38,0x38,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x20,0x75,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x41,0x72,0x72,
    0x61,0x79,0x20,0x73,0x70,0x6c,0x61,0x74,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x73,0x70,0x6c,0x61,0x74,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x75,0x69,0x6e,0x74,0x20,0x73,0x6f,
    0x72,0x74,0x65,0x64,0x5f,0x69,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,
    0x20,0x76,0x65,0x63,0x32,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,
    0x3b,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x6f,0x63,0x74,0x61,0x68,0x65,0x64,0x72,
    0x61,0x6c,0x5f,0x64,0x65,0x63,0x6f,0x64,0x65,0x28,0x69,0x6e,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x32,0x20,0x66,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x20,
    0x3d,0x20,0x28,0x66,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,0x20,0x76,0x65,
    0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,
    0x61,0x62,0x73,0x28,0x66,0x2e,0x78,0x29,0x29,0x20,0x2d,0x20,0x61,0x62,0x73,0x28,
    0x66,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x34,0x35,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x66,0x2e,0x78,0x2c,0x20,0x66,
    0x2e,0x79,0x2c,0x20,0x5f,0x34,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x35,0x32,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x2d,0x5f,
    0x34,0x34,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x32,0x20,0x5f,0x35,0x34,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x35,
    0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x35,0x37,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x2d,0x5f,0x35,0x32,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x35,0x39,0x20,0x3d,0x20,0x5f,0x34,
    0x35,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x76,0x65,0x63,0x32,0x20,
    0x5f,0x36,0x33,0x20,0x3d,0x20,0x67,0x72,0x65,0x61,0x74,0x65,0x72,0x54,0x68,0x61,
    0x6e,0x45,0x71,0x75,0x61,0x6c,0x28,0x5f,0x35,0x39,0x2c,0x20,0x76,0x65,0x63,0x32,
    0x28,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,
    0x20,0x5f,0x36,0x37,0x20,0x3d,0x20,0x5f,0x35,0x39,0x20,0x2b,0x20,0x76,0x65,0x63,
    0x32,0x28,0x5f,0x36,0x33,0x2e,0x78,0x20,0x3f,0x20,0x5f,0x35,0x37,0x2e,0x78,0x20,
    0x3a,0x20,0x5f,0x35,0x34,0x2e,0x78,0x2c,0x20,0x5f,0x36,0x33,0x2e,0x79,0x20,0x3f,
    0x20,0x5f,0x35,0x37,0x2e,0x79,0x20,0x3a,0x20,0x5f,0x35,0x34,0x2e,0x79,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x32,0x31,0x20,0x3d,
    0x20,0x5f,0x34,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,0x32,0x31,0x2e,0x78,
    0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,
    0x32,0x31,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x79,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x5f,0x34,0x32,0x31,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x6d,0x61,0x74,
    0x33,0x20,0x71,0x75,0x61,0x74,0x5f,0x74,0x6f,0x5f,0x6d,0x61,0x74,0x33,0x28,0x76,
    0x65,0x63,0x34,0x20,0x71,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x38,0x31,0x20,0x3d,0x20,0x71,0x2e,0x78,0x20,0x2a,0x20,0x71,
    0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,
    0x37,0x20,0x3d,0x20,0x71,0x2e,0x79,0x20,0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x33,0x20,0x3d,0x20,0x71,
    0x2e,0x7a,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x39,0x39,0x20,0x3d,0x20,0x71,0x2e,0x78,0x20,0x2a,0x20,
    0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x30,0x35,0x20,0x3d,0x20,0x71,0x2e,0x78,0x20,0x2a,0x20,0x71,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x31,0x20,
    0x3d,0x20,0x71,0x2e,0x79,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x38,0x20,0x3d,0x20,0x71,0x2e,
    0x77,0x20,0x2a,0x20,0x71,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x32,0x34,0x20,0x3d,0x20,0x71,0x2e,0x77,0x20,0x2a,0x20,
    0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x33,0x30,0x20,0x3d,0x20,0x71,0x2e,0x77,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x74,0x33,
    0x28,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,
    0x20,0x2a,0x20,0x28,0x5f,0x38,0x37,0x20,0x2b,0x20,0x5f,0x39,0x33,0x29,0x29,0x2c,
    0x20,0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2d,0x20,0x5f,
    0x31,0x33,0x30,0x29,0x2c,0x20,0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,
    0x20,0x2b,0x20,0x5f,0x31,0x32,0x34,0x29,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,
    0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2b,0x20,0x5f,0x31,
    0x33,0x30,0x29,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,
    0x2a,0x20,0x28,0x5f,0x38,0x31,0x20,0x2b,0x20,0x5f,0x39,0x33,0x29,0x29,0x2c,0x20,
    0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,0x31,0x20,0x2d,0x20,0x5f,0x31,
    0x31,0x38,0x29,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x32,0x2e,0x30,0x20,0x2a,
    0x20,0x28,0x5f,0x39,0x39,0x20,0x2d,0x20,0x5f,0x31,0x32,0x34,0x29,0x2c,0x20,0x32,
    0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,0x31,0x20,0x2b,0x20,0x5f,0x31,0x31,
    0x38,0x29,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,0x2a,
    0x20,0x28,0x5f,0x38,0x31,0x20,0x2b,0x20,0x5f,0x38,0x37,0x29,0x29,0x29,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x38,0x32,0x20,0x3d,
    0x20,0x69,0x6e,0x74,0x28,0x73,0x6f,0x72,0x74,0x65,0x64,0x5f,0x69,0x6e,0x64,0x65,
    0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x39,0x33,
    0x20,0x3d,0x20,0x5f,0x31,0x38,0x32,0x20,0x2f,0x20,0x5f,0x31,0x38,0x38,0x2e,0x73,
    0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,0x61,0x79,0x65,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x32,0x30,0x30,0x20,0x3d,0x20,
    0x5f,0x31,0x38,0x32,0x20,0x2d,0x20,0x28,0x5f,0x31,0x39,0x33,0x20,0x2a,0x20,0x5f,
    0x31,0x38,0x38,0x2e,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,
    0x61,0x79,0x65,0x72,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x32,0x33,0x32,0x20,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,
    0x63,0x68,0x28,0x73,0x70,0x6c,0x61,0x74,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x73,0x70,0x6c,0x61,0x74,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,
    0x69,0x76,0x65,0x63,0x33,0x28,0x5f,0x32,0x30,0x30,0x20,0x25,0x20,0x5f,0x31,0x38,
    0x38,0x2e,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x77,0x69,0x64,0x74,0x68,0x2c,
    0x20,0x5f,0x32,0x30,0x30,0x20,0x2f,0x20,0x5f,0x31,0x38,0x38,0x2e,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x77,0x69,0x64,0x74,0x68,0x2c,0x20,0x5f,0x31,0x39,0x33,
    0x29,0x2c,0x20,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,
    0x5f,0x32,0x33,0x36,0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x77,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x38,0x20,0x3d,0x20,0x5f,
    0x32,0x33,0x36,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x5f,0x32,0x33,0x38,0x20,0x3c,0x20,0x33,0x75,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x32,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x69,0x6e,0x74,0x20,0x5f,0x32,0x35,0x33,0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,
    0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x36,0x34,
    0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x69,0x6e,0x74,0x20,0x5f,0x32,0x39,0x38,0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,
    0x5f,0x32,0x36,0x34,0x20,0x3e,0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,
    0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x36,0x34,0x20,
    0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,
    0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,
    0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x30,0x39,0x20,0x3d,0x20,0x6f,0x63,
    0x74,0x61,0x68,0x65,0x64,0x72,0x61,0x6c,0x5f,0x64,0x65,0x63,0x6f,0x64,0x65,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x33,0x31,0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,
    0x5f,0x32,0x39,0x38,0x20,0x3e,0x3e,0x20,0x32,0x34,0x75,0x29,0x20,0x26,0x20,0x32,
    0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x36,0x31,0x35,0x39,0x39,
    0x38,0x35,0x39,0x30,0x33,0x36,0x35,0x30,0x35,0x32,0x32,0x32,0x33,0x32,0x30,0x35,
    0x35,0x36,0x36,0x34,0x30,0x36,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x28,0x28,0x5f,0x32,0x33,0x36,0x20,0x3e,0x3e,0x20,0x32,0x34,0x75,0x29,0x20,0x26,
    0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,
    0x32,0x33,0x36,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,0x32,0x35,
    0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x33,0x36,
    0x20,0x3e,0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x33,0x38,0x29,0x29,0x20,0x2a,0x20,
    0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,
    0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,
    0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x33,0x30,0x39,0x20,
    0x2a,0x20,0x73,0x69,0x6e,0x28,0x5f,0x33,0x31,0x33,0x29,0x2c,0x20,0x63,0x6f,0x73,
    0x28,0x5f,0x33,0x31,0x33,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x38,0x38,0x2e,
    0x70,0x72,0x6f,0x6a,0x4d,0x61,0x74,0x20,0x2a,0x20,0x28,0x5f,0x31,0x38,0x38,0x2e,
    0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x28,
    0x5f,0x31,0x38,0x38,0x2e,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x69,0x6e,0x20,
    0x2b,0x20,0x28,0x28,0x76,0x65,0x63,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,
    0x5f,0x32,0x35,0x33,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,0x36,
    0x35,0x35,0x33,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,
    0x35,0x33,0x20,0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x36,0x34,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,
    0x29,0x20,0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x29,0x20,0x2a,0x20,0x31,
    0x2e,0x35,0x32,0x35,0x39,0x30,0x32,0x31,0x38,0x39,0x33,0x31,0x34,0x33,0x36,0x35,
    0x33,0x38,0x36,0x39,0x36,0x32,0x38,0x39,0x30,0x36,0x32,0x35,0x65,0x2d,0x30,0x35,
    0x29,0x20,0x2a,0x20,0x5f,0x31,0x38,0x38,0x2e,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,
    0x73,0x69,0x7a,0x65,0x29,0x29,0x20,0x2b,0x20,0x28,0x71,0x75,0x61,0x74,0x5f,0x74,
    0x6f,0x5f,0x6d,0x61,0x74,0x33,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x20,
    0x2a,0x20,0x28,0x76,0x65,0x63,0x33,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x28,0x76,0x65,
    0x63,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,0x20,0x3e,
    0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,0x20,0x3e,0x3e,0x20,0x38,
    0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x5f,0x32,0x39,0x38,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x29,0x20,
    0x2a,0x20,0x30,0x2e,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x37,0x36,0x36,0x32,
    0x33,0x36,0x33,0x30,0x35,0x32,0x33,0x36,0x38,0x31,0x36,0x34,0x30,0x36,0x32,0x35,
    0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x33,0x28,0x35,0x2e,0x30,0x29,0x29,0x29,0x29,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x71,0x75,0x61,
    0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 410

    layout(location = 1) in vec2 quad_coord;
    layout(location = 0) in vec4 color;
    layout(location = 0) out vec4 frag_color;

    void main()
    {
        float _14 = dot(quad_coord, quad_coord);
        if (_14 > 0.25)
        {
            discard;
        }
        float _34 = clamp(_14 * 4.0, 0.0, 1.0);
        frag_color = vec4(color.xyz, (color.w * exp(_14 * (-8.0))) * (1.0 - ((_34 * _34) * (3.0 - (2.0 * _34)))));
    }

*/
static const uint8_t fs_source_glsl410[401] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x31,0x30,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x71,0x75,0x61,0x64,0x5f,
    0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,
    0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,
    0x34,0x20,0x3d,0x20,0x64,0x6f,0x74,0x28,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,
    0x72,0x64,0x2c,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x34,0x20,0x3e,0x20,0x30,
    0x2e,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x34,0x20,
    0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x31,0x34,0x20,0x2a,0x20,0x34,0x2e,
    0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x28,
    0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x5f,0x31,
    0x34,0x20,0x2a,0x20,0x28,0x2d,0x38,0x2e,0x30,0x29,0x29,0x29,0x20,0x2a,0x20,0x28,
    0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x28,0x5f,0x33,0x34,0x20,0x2a,0x20,0x5f,0x33,
    0x34,0x29,0x20,0x2a,0x20,0x28,0x33,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,
    0x20,0x2a,0x20,0x5f,0x33,0x34,0x29,0x29,0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x00,
};
/*
    #version 310 es

    struct vs_params
    {
        mat4 viewMat;
        mat4 projMat;
        vec3 bounds_min;
        vec3 bounds_max;
        vec3 bounds_size;
        int texture_width;
        int texture_height;
        int splats_per_layer;
    };

    uniform vs_params _188;

    layout(binding = 0) uniform highp usampler2DArray splat_texture_splat_sampler;

    layout(location = 1) in uint sorted_index;
    layout(location = 0) out vec4 color;
    layout(location = 0) in vec2 position;
    layout(location = 1) out vec2 quad_coord;

    vec3 octahedral_decode(inout vec2 f)
    {
        f = (f * 2.0) - vec2(1.0);
        float _44 = (1.0 - abs(f.x)) - abs(f.y);
        vec3 _45 = vec3(f.x, f.y, _44);
        float _52 = max(-_44, 0.0);
        vec2 _59 = _45.xy;
        vec2 _67 = _59 + mix(vec2(_52), vec2(-_52), greaterThanEqual(_59, vec2(0.0)));
        vec3 _421 = _45;
        _421.x = _67.x;
        _421.y = _67.y;
        return normalize(_421);
    }

    mat3 quat_to_mat3(vec4 q)
    {
        float _81 = q.x * q.x;
        float _87 = q.y * q.y;
        float _93 = q.z * q.z;
        float _99 = q.x * q.z;
        float _105 = q.x * q.y;
        float _111 = q.y * q.z;
        float _118 = q.w * q.x;
        float _124 = q.w * q.y;
        float _130 = q.w * q.z;
        return mat3(vec3(1.0 - (2.0 * (_87 + _93)), 2.0 * (_105 - _130), 2.0 * (_99 + _124)), vec3(2.0 * (_105 + _130), 1.0 - (2.0 * (_81 + _93)), 2.0 * (_111 - _118)), vec3(2.0 * (_99 - _124), 2.0 * (_111 + _118), 1.0 - (2.0 * (_81 + _87))));
    }

    void main()
    {
        int _182 = int(sorted_index);
        int _193 = _182 / _188.splats_per_layer;
        int _200 = _182 - (_193 * _188.splats_per_layer);
        uvec4 _232 = texelFetch(splat_texture_splat_sampler, ivec3(_200 % _188.texture_width, _200 / _188.texture_width, _193), 0);
        uint _236 = _232.w;
        uint _238 = _236 & 255u;
        if (_238 < 3u)
        {
            gl_Position = vec4(0.0, 0.0, 2.0, 1.0);
            return;
        }
        uint _253 = _232.x;
        uint _264 = _232.y;
        uint _298 = _232.z;
        vec2 param = vec2(float((_264 >> 8u) & 255u), float(_264 & 255u)) * 0.0039215688593685626983642578125;
        vec3 _309 = octahedral_decode(param);
        float _313 = float((_298 >> 24u) & 255u) * 0.0061599859036505222320556640625;
        color = vec4(float((_236 >> 24u) & 255u), float((_236 >> 16u) & 255u), float((_236 >> 8u) & 255u), float(_238)) * 0.0039215688593685626983642578125;
        vec4 param_1 = vec4(_309 * sin(_313), cos(_313));
        gl_Position = _188.projMat * (_188.viewMat * vec4((_188.bounds_min + ((vec3(float((_253 >> 16u) & 65535u), float(_253 & 65535u), float((_264 >> 16u) & 65535u)) * 1.525902189314365386962890625e-05) * _188.bounds_size)) + (quat_to_mat3(param_1) * (vec3(position, 0.0) * exp((vec3(float((_298 >> 16u) & 255u), float((_298 >> 8u) & 255u), float(_298 & 255u)) * 0.0392156876623630523681640625) - vec3(5.0)))), 1.0));
        quad_coord = position;
    }

*/
static const uint8_t vs_source_glsl310es[2760] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x31,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x76,0x69,0x65,
    0x77,0x4d,0x61,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x70,
    0x72,0x6f,0x6a,0x4d,0x61,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x61,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x62,0x6f,0x75,0x6e,0x64,
    0x73,0x5f,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x77,0x69,0x64,0x74,0x68,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x68,
    0x65,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x73,
    0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,0x61,0x79,0x65,0x72,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x5f,0x31,0x38,0x38,0x3b,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x75,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x20,
    0x73,0x70,0x6c,0x61,0x74,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x73,0x70,
    0x6c,0x61,0x74,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x3b,0x0a,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x31,0x29,0x20,0x69,0x6e,0x20,0x75,0x69,0x6e,0x74,0x20,0x73,0x6f,0x72,0x74,0x65,
    0x64,0x5f,0x69,0x6e,0x64,0x65,0x78,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,
    0x63,0x32,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x0a,
    0x76,0x65,0x63,0x33,0x20,0x6f,0x63,0x74,0x61,0x68,0x65,0x64,0x72,0x61,0x6c,0x5f,
    0x64,0x65,0x63,0x6f,0x64,0x65,0x28,0x69,0x6e,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x32,0x20,0x66,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x20,0x3d,0x20,0x28,
    0x66,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x32,0x28,
    0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x34,0x34,0x20,0x3d,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x61,0x62,0x73,
    0x28,0x66,0x2e,0x78,0x29,0x29,0x20,0x2d,0x20,0x61,0x62,0x73,0x28,0x66,0x2e,0x79,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x35,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x66,0x2e,0x78,0x2c,0x20,0x66,0x2e,0x79,0x2c,
    0x20,0x5f,0x34,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x35,0x32,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x2d,0x5f,0x34,0x34,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,
    0x5f,0x35,0x39,0x20,0x3d,0x20,0x5f,0x34,0x35,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x36,0x37,0x20,0x3d,0x20,0x5f,0x35,0x39,
    0x20,0x2b,0x20,0x6d,0x69,0x78,0x28,0x76,0x65,0x63,0x32,0x28,0x5f,0x35,0x32,0x29,
    0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x2d,0x5f,0x35,0x32,0x29,0x2c,0x20,0x67,0x72,
    0x65,0x61,0x74,0x65,0x72,0x54,0x68,0x61,0x6e,0x45,0x71,0x75,0x61,0x6c,0x28,0x5f,
    0x35,0x39,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x29,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x32,0x31,0x20,0x3d,
    0x20,0x5f,0x34,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,0x32,0x31,0x2e,0x78,
    0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,
    0x32,0x31,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x79,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x5f,0x34,0x32,0x31,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x6d,0x61,0x74,
    0x33,0x20,0x71,0x75,0x61,0x74,0x5f,0x74,0x6f,0x5f,0x6d,0x61,0x74,0x33,0x28,0x76,
    0x65,0x63,0x34,0x20,0x71,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x38,0x31,0x20,0x3d,0x20,0x71,0x2e,0x78,0x20,0x2a,0x20,0x71,
    0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,
    0x37,0x20,0x3d,0x20,0x71,0x2e,0x79,0x20,0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x33,0x20,0x3d,0x20,0x71,
    0x2e,0x7a,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x39,0x39,0x20,0x3d,0x20,0x71,0x2e,0x78,0x20,0x2a,0x20,
    0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x30,0x35,0x20,0x3d,0x20,0x71,0x2e,0x78,0x20,0x2a,0x20,0x71,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x31,0x20,
    0x3d,0x20,0x71,0x2e,0x79,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x38,0x20,0x3d,0x20,0x71,0x2e,
    0x77,0x20,0x2a,0x20,0x71,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x32,0x34,0x20,0x3d,0x20,0x71,0x2e,0x77,0x20,0x2a,0x20,
    0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x33,0x30,0x20,0x3d,0x20,0x71,0x2e,0x77,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x74,0x33,
    0x28,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,
    0x20,0x2a,0x20,0x28,0x5f,0x38,0x37,0x20,0x2b,0x20,0x5f,0x39,0x33,0x29,0x29,0x2c,
    0x20,0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2d,0x20,0x5f,
    0x31,0x33,0x30,0x29,0x2c,0x20,0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,
    0x20,0x2b,0x20,0x5f,0x31,0x32,0x34,0x29,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,
    0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2b,0x20,0x5f,0x31,
    0x33,0x30,0x29,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,
    0x2a,0x20,0x28,0x5f,0x38,0x31,0x20,0x2b,0x20,0x5f,0x39,0x33,0x29,0x29,0x2c,0x20,
    0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,0x31,0x20,0x2d,0x20,0x5f,0x31,
    0x31,0x38,0x29,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x32,0x2e,0x30,0x20,0x2a,
    0x20,0x28,0x5f,0x39,0x39,0x20,0x2d,0x20,0x5f,0x31,0x32,0x34,0x29,0x2c,0x20,0x32,
    0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,0x31,0x20,0x2b,0x20,0x5f,0x31,0x31,
    0x38,0x29,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,0x2a,
    0x20,0x28,0x5f,0x38,0x31,0x20,0x2b,0x20,0x5f,0x38,0x37,0x29,0x29,0x29,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x38,0x32,0x20,0x3d,
    0x20,0x69,0x6e,0x74,0x28,0x73,0x6f,0x72,0x74,0x65,0x64,0x5f,0x69,0x6e,0x64,0x65,
    0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x39,0x33,
    0x20,0x3d,0x20,0x5f,0x31,0x38,0x32,0x20,0x2f,0x20,0x5f,0x31,0x38,0x38,0x2e,0x73,
    0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,0x61,0x79,0x65,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x32,0x30,0x30,0x20,0x3d,0x20,
    0x5f,0x31,0x38,0x32,0x20,0x2d,0x20,0x28,0x5f,0x31,0x39,0x33,0x20,0x2a,0x20,0x5f,
    0x31,0x38,0x38,0x2e,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,
    0x61,0x79,0x65,0x72,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x32,0x33,0x32,0x20,0x3d,0x20,0x74,0x65,0x78,0x65,0x6c,0x46,0x65,0x74,
    0x63,0x68,0x28,0x73,0x70,0x6c,0x61,0x74,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x5f,0x73,0x70,0x6c,0x61,0x74,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x2c,0x20,
    0x69,0x76,0x65,0x63,0x33,0x28,0x5f,0x32,0x30,0x30,0x20,0x25,0x20,0x5f,0x31,0x38,
    0x38,0x2e,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x77,0x69,0x64,0x74,0x68,0x2c,
    0x20,0x5f,0x32,0x30,0x30,0x20,0x2f,0x20,0x5f,0x31,0x38,0x38,0x2e,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x77,0x69,0x64,0x74,0x68,0x2c,0x20,0x5f,0x31,0x39,0x33,
    0x29,0x2c,0x20,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,
    0x5f,0x32,0x33,0x36,0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x77,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x38,0x20,0x3d,0x20,0x5f,
    0x32,0x33,0x36,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x66,0x20,0x28,0x5f,0x32,0x33,0x38,0x20,0x3c,0x20,0x33,0x75,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x32,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x69,0x6e,0x74,0x20,0x5f,0x32,0x35,0x33,0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,
    0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x36,0x34,
    0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x69,0x6e,0x74,0x20,0x5f,0x32,0x39,0x38,0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x20,0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,
    0x5f,0x32,0x36,0x34,0x20,0x3e,0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,
    0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x36,0x34,0x20,
    0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,
    0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,
    0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x30,0x39,0x20,0x3d,0x20,0x6f,0x63,
    0x74,0x61,0x68,0x65,0x64,0x72,0x61,0x6c,0x5f,0x64,0x65,0x63,0x6f,0x64,0x65,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x33,0x31,0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,
    0x5f,0x32,0x39,0x38,0x20,0x3e,0x3e,0x20,0x32,0x34,0x75,0x29,0x20,0x26,0x20,0x32,
    0x35,0x35,0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x36,0x31,0x35,0x39,0x39,
    0x38,0x35,0x39,0x30,0x33,0x36,0x35,0x30,0x35,0x32,0x32,0x32,0x33,0x32,0x30,0x35,
    0x35,0x36,0x36,0x34,0x30,0x36,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x28,0x28,0x5f,0x32,0x33,0x36,0x20,0x3e,0x3e,0x20,0x32,0x34,0x75,0x29,0x20,0x26,
    0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,
    0x32,0x33,0x36,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,0x32,0x35,
    0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x33,0x36,
    0x20,0x3e,0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x33,0x38,0x29,0x29,0x20,0x2a,0x20,
    0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,0x36,
    0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,0x32,
    0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x33,0x30,0x39,0x20,
    0x2a,0x20,0x73,0x69,0x6e,0x28,0x5f,0x33,0x31,0x33,0x29,0x2c,0x20,0x63,0x6f,0x73,
    0x28,0x5f,0x33,0x31,0x33,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x38,0x38,0x2e,
    0x70,0x72,0x6f,0x6a,0x4d,0x61,0x74,0x20,0x2a,0x20,0x28,0x5f,0x31,0x38,0x38,0x2e,
    0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x28,
    0x5f,0x31,0x38,0x38,0x2e,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x69,0x6e,0x20,
    0x2b,0x20,0x28,0x28,0x76,0x65,0x63,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,
    0x5f,0x32,0x35,0x33,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,0x36,
    0x35,0x35,0x33,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,
    0x35,0x33,0x20,0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x36,0x34,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,
    0x29,0x20,0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x29,0x20,0x2a,0x20,0x31,
    0x2e,0x35,0x32,0x35,0x39,0x30,0x32,0x31,0x38,0x39,0x33,0x31,0x34,0x33,0x36,0x35,
    0x33,0x38,0x36,0x39,0x36,0x32,0x38,0x39,0x30,0x36,0x32,0x35,0x65,0x2d,0x30,0x35,
    0x29,0x20,0x2a,0x20,0x5f,0x31,0x38,0x38,0x2e,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,
    0x73,0x69,0x7a,0x65,0x29,0x29,0x20,0x2b,0x20,0x28,0x71,0x75,0x61,0x74,0x5f,0x74,
    0x6f,0x5f,0x6d,0x61,0x74,0x33,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x20,
    0x2a,0x20,0x28,0x76,0x65,0x63,0x33,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x28,0x76,0x65,
    0x63,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,0x20,0x3e,
    0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,0x20,0x3e,0x3e,0x20,0x38,
    0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x5f,0x32,0x39,0x38,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x29,0x20,
    0x2a,0x20,0x30,0x2e,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x37,0x36,0x36,0x32,
    0x33,0x36,0x33,0x30,0x35,0x32,0x33,0x36,0x38,0x31,0x36,0x34,0x30,0x36,0x32,0x35,
    0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x33,0x28,0x35,0x2e,0x30,0x29,0x29,0x29,0x29,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x71,0x75,0x61,
    0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 310 es
    precision mediump float;
    precision highp int;

    layout(location = 1) in highp vec2 quad_coord;
    layout(location = 0) in highp vec4 color;
    layout(location = 0) out highp vec4 frag_color;

    void main()
    {
        highp float _14 = dot(quad_coord, quad_coord);
        if (_14 > 0.25)
        {
            discard;
        }
        highp float _34 = clamp(_14 * 4.0, 0.0, 1.0);
        frag_color = vec4(color.xyz, (color.w * exp(_14 * (-8.0))) * (1.0 - ((_34 * _34) * (3.0 - (2.0 * _34)))));
    }

*/
static const uint8_t fs_source_glsl310es[480] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x31,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x32,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x30,0x29,0x20,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x20,0x3d,0x20,0x64,0x6f,0x74,
    0x28,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2c,0x20,0x71,0x75,0x61,
    0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x31,0x34,0x20,0x3e,0x20,0x30,0x2e,0x32,0x35,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,
    0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x34,0x20,0x3d,
    0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x31,0x34,0x20,0x2a,0x20,0x34,0x2e,0x30,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x28,0x63,
    0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x5f,0x31,0x34,
    0x20,0x2a,0x20,0x28,0x2d,0x38,0x2e,0x30,0x29,0x29,0x29,0x20,0x2a,0x20,0x28,0x31,
    0x2e,0x30,0x20,0x2d,0x20,0x28,0x28,0x5f,0x33,0x34,0x20,0x2a,0x20,0x5f,0x33,0x34,
    0x29,0x20,0x2a,0x20,0x28,0x33,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,
    0x2a,0x20,0x5f,0x33,0x34,0x29,0x29,0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
/*
    cbuffer vs_params : register(b0)
    {
        row_major float4x4 _188_viewMat : packoffset(c0);
        row_major float4x4 _188_projMat : packoffset(c4);
        float3 _188_bounds_min : packoffset(c8);
        float3 _188_bounds_max : packoffset(c9);
        float3 _188_bounds_size : packoffset(c10);
        int _188_texture_width : packoffset(c10.w);
        int _188_texture_height : packoffset(c11);
        int _188_splats_per_layer : packoffset(c11.y);
    };

    Texture2DArray<uint4> splat_texture : register(t0);
    SamplerState splat_sampler : register(s2);

    static float4 gl_Position;
    static uint sorted_index;
    static float4 color;
    static float2 position;
    static float2 quad_coord;

    struct SPIRV_Cross_Input
    {
        float2 position : TEXCOORD0;
        uint sorted_index : TEXCOORD1;
    };

    struct SPIRV_Cross_Output
    {
        float4 color : TEXCOORD0;
        float2 quad_coord : TEXCOORD1;
        float4 gl_Position : SV_Position;
    };

    float3 octahedral_decode(inout float2 f)
    {
        f = (f * 2.0f) - 1.0f.xx;
        float _44 = (1.0f - abs(f.x)) - abs(f.y);
        float3 _45 = float3(f.x, f.y, _44);
        float _52 = max(-_44, 0.0f);
        float2 _54 = _52.xx;
        float2 _57 = (-_52).xx;
        float2 _59 = _45.xy;
        bool2 _63 = bool2(_59.x >= 0.0f.xx.x, _59.y >= 0.0f.xx.y);
        float2 _67 = _59 + float2(_63.x ? _57.x : _54.x, _63.y ? _57.y : _54.y);
        float3 _421 = _45;
        _421.x = _67.x;
        _421.y = _67.y;
        return normalize(_421);
    }

    float3x3 quat_to_mat3(float4 q)
    {
        float _81 = q.x * q.x;
        float _87 = q.y * q.y;
        float _93 = q.z * q.z;
        float _99 = q.x * q.z;
        float _105 = q.x * q.y;
        float _111 = q.y * q.z;
        float _118 = q.w * q.x;
        float _124 = q.w * q.y;
        float _130 = q.w * q.z;
        return float3x3(float3(1.0f - (2.0f * (_87 + _93)), 2.0f * (_105 - _130), 2.0f * (_99 + _124)), float3(2.0f * (_105 + _130), 1.0f - (2.0f * (_81 + _93)), 2.0f * (_111 - _118)), float3(2.0f * (_99 - _124), 2.0f * (_111 + _118), 1.0f - (2.0f * (_81 + _87))));
    }

    void vert_main()
    {
        int _182 = int(sorted_index);
        int _193 = _182 / _188_splats_per_layer;
        int _200 = _182 - (_193 * _188_splats_per_layer);
        uint4 _232 = splat_texture.Load(int4(int3(_200 % _188_texture_width, _200 / _188_texture_width, _193), 0));
        uint _236 = _232.w;
        uint _238 = _236 & 255u;
        if (_238 < 3u)
        {
            gl_Position = float4(0.0f, 0.0f, 2.0f, 1.0f);
            return;
        }
        uint _253 = _232.x;
        uint _264 = _232.y;
        uint _298 = _232.z;
        float2 param = float2(float((_264 >> 8u) & 255u), float(_264 & 255u)) * 0.0039215688593685626983642578125f;
        float3 _309 = octahedral_decode(param);
        float _313 = float((_298 >> 24u) & 255u) * 0.0061599859036505222320556640625f;
        color = float4(float((_236 >> 24u) & 255u), float((_236 >> 16u) & 255u), float((_236 >> 8u) & 255u), float(_238)) * 0.0039215688593685626983642578125f;
        float4 param_1 = float4(_309 * sin(_313), cos(_313));
        gl_Position = mul(mul(float4((_188_bounds_min + ((float3(float((_253 >> 16u) & 65535u), float(_253 & 65535u), float((_264 >> 16u) & 65535u)) * 1.525902189314365386962890625e-05f) * _188_bounds_size)) + mul(float3(position, 0.0f) * exp((float3(float((_298 >> 16u) & 255u), float((_298 >> 8u) & 255u), float(_298 & 255u)) * 0.0392156876623630523681640625f) - 5.0f.xxx), quat_to_mat3(param_1)), 1.0f), _188_viewMat), _188_projMat);
        quad_coord = position;
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        sorted_index = stage_input.sorted_index;
        position = stage_input.position;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.color = color;
        stage_output.quad_coord = quad_coord;
        return stage_output;
    }
*/
static const uint8_t vs_source_hlsl5[3681] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x31,0x38,0x38,0x5f,0x76,
    0x69,0x65,0x77,0x4d,0x61,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,
    0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,
    0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,
    0x5f,0x31,0x38,0x38,0x5f,0x70,0x72,0x6f,0x6a,0x4d,0x61,0x74,0x20,0x3a,0x20,0x70,
    0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x38,0x38,0x5f,0x62,
    0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x69,0x6e,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x38,0x38,0x5f,0x62,0x6f,0x75,0x6e,
    0x64,0x73,0x5f,0x6d,0x61,0x78,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,
    0x73,0x65,0x74,0x28,0x63,0x39,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x5f,0x31,0x38,0x38,0x5f,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,
    0x73,0x69,0x7a,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x63,0x31,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x5f,0x31,0x38,0x38,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x77,0x69,0x64,
    0x74,0x68,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x63,0x31,0x30,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x5f,0x31,0x38,0x38,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x68,0x65,0x69,
    0x67,0x68,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x31,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,
    0x31,0x38,0x38,0x5f,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,
    0x61,0x79,0x65,0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x63,0x31,0x31,0x2e,0x79,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x54,0x65,
    0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x41,0x72,0x72,0x61,0x79,0x3c,0x75,0x69,0x6e,
    0x74,0x34,0x3e,0x20,0x73,0x70,0x6c,0x61,0x74,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x30,0x29,
    0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x73,
    0x70,0x6c,0x61,0x74,0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x3a,0x20,0x72,
    0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x32,0x29,0x3b,0x0a,0x0a,0x73,0x74,
    0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,
    0x75,0x69,0x6e,0x74,0x20,0x73,0x6f,0x72,0x74,0x65,0x64,0x5f,0x69,0x6e,0x64,0x65,
    0x78,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x71,0x75,
    0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,
    0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,
    0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,
    0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,
    0x73,0x6f,0x72,0x74,0x65,0x64,0x5f,0x69,0x6e,0x64,0x65,0x78,0x20,0x3a,0x20,0x54,
    0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,
    0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,
    0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,
    0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6f,0x63,0x74,0x61,
    0x68,0x65,0x64,0x72,0x61,0x6c,0x5f,0x64,0x65,0x63,0x6f,0x64,0x65,0x28,0x69,0x6e,
    0x6f,0x75,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x20,0x3d,0x20,0x28,0x66,0x20,0x2a,0x20,0x32,0x2e,0x30,
    0x66,0x29,0x20,0x2d,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x28,0x31,
    0x2e,0x30,0x66,0x20,0x2d,0x20,0x61,0x62,0x73,0x28,0x66,0x2e,0x78,0x29,0x29,0x20,
    0x2d,0x20,0x61,0x62,0x73,0x28,0x66,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x34,0x35,0x20,0x3d,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x28,0x66,0x2e,0x78,0x2c,0x20,0x66,0x2e,0x79,0x2c,0x20,0x5f,0x34,
    0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,
    0x32,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x2d,0x5f,0x34,0x34,0x2c,0x20,0x30,0x2e,
    0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,
    0x5f,0x35,0x34,0x20,0x3d,0x20,0x5f,0x35,0x32,0x2e,0x78,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x35,0x37,0x20,0x3d,0x20,0x28,
    0x2d,0x5f,0x35,0x32,0x29,0x2e,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x5f,0x35,0x39,0x20,0x3d,0x20,0x5f,0x34,0x35,0x2e,0x78,
    0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x32,0x20,0x5f,0x36,0x33,
    0x20,0x3d,0x20,0x62,0x6f,0x6f,0x6c,0x32,0x28,0x5f,0x35,0x39,0x2e,0x78,0x20,0x3e,
    0x3d,0x20,0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,0x2e,0x78,0x2c,0x20,0x5f,0x35,0x39,
    0x2e,0x79,0x20,0x3e,0x3d,0x20,0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,0x2e,0x79,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x36,0x37,
    0x20,0x3d,0x20,0x5f,0x35,0x39,0x20,0x2b,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,
    0x5f,0x36,0x33,0x2e,0x78,0x20,0x3f,0x20,0x5f,0x35,0x37,0x2e,0x78,0x20,0x3a,0x20,
    0x5f,0x35,0x34,0x2e,0x78,0x2c,0x20,0x5f,0x36,0x33,0x2e,0x79,0x20,0x3f,0x20,0x5f,
    0x35,0x37,0x2e,0x79,0x20,0x3a,0x20,0x5f,0x35,0x34,0x2e,0x79,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x34,0x32,0x31,0x20,0x3d,
    0x20,0x5f,0x34,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,0x32,0x31,0x2e,0x78,
    0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,
    0x32,0x31,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x79,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x5f,0x34,0x32,0x31,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x78,0x33,0x20,0x71,0x75,0x61,0x74,0x5f,0x74,0x6f,0x5f,0x6d,0x61,
    0x74,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x71,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x31,0x20,0x3d,0x20,0x71,
    0x2e,0x78,0x20,0x2a,0x20,0x71,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x38,0x37,0x20,0x3d,0x20,0x71,0x2e,0x79,0x20,0x2a,0x20,
    0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x39,0x33,0x20,0x3d,0x20,0x71,0x2e,0x7a,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x39,0x20,0x3d,0x20,
    0x71,0x2e,0x78,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x35,0x20,0x3d,0x20,0x71,0x2e,0x78,0x20,
    0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x31,0x31,0x31,0x20,0x3d,0x20,0x71,0x2e,0x79,0x20,0x2a,0x20,0x71,0x2e,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,
    0x38,0x20,0x3d,0x20,0x71,0x2e,0x77,0x20,0x2a,0x20,0x71,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x32,0x34,0x20,0x3d,0x20,
    0x71,0x2e,0x77,0x20,0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x33,0x30,0x20,0x3d,0x20,0x71,0x2e,0x77,0x20,
    0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x78,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x66,0x20,0x2a,
    0x20,0x28,0x5f,0x38,0x37,0x20,0x2b,0x20,0x5f,0x39,0x33,0x29,0x29,0x2c,0x20,0x32,
    0x2e,0x30,0x66,0x20,0x2a,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2d,0x20,0x5f,0x31,
    0x33,0x30,0x29,0x2c,0x20,0x32,0x2e,0x30,0x66,0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,
    0x20,0x2b,0x20,0x5f,0x31,0x32,0x34,0x29,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x28,0x32,0x2e,0x30,0x66,0x20,0x2a,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2b,
    0x20,0x5f,0x31,0x33,0x30,0x29,0x2c,0x20,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x28,
    0x32,0x2e,0x30,0x66,0x20,0x2a,0x20,0x28,0x5f,0x38,0x31,0x20,0x2b,0x20,0x5f,0x39,
    0x33,0x29,0x29,0x2c,0x20,0x32,0x2e,0x30,0x66,0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,
    0x31,0x20,0x2d,0x20,0x5f,0x31,0x31,0x38,0x29,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x28,0x32,0x2e,0x30,0x66,0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,0x20,0x2d,
    0x20,0x5f,0x31,0x32,0x34,0x29,0x2c,0x20,0x32,0x2e,0x30,0x66,0x20,0x2a,0x20,0x28,
    0x5f,0x31,0x31,0x31,0x20,0x2b,0x20,0x5f,0x31,0x31,0x38,0x29,0x2c,0x20,0x31,0x2e,
    0x30,0x66,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x66,0x20,0x2a,0x20,0x28,0x5f,0x38,
    0x31,0x20,0x2b,0x20,0x5f,0x38,0x37,0x29,0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x38,0x32,0x20,
    0x3d,0x20,0x69,0x6e,0x74,0x28,0x73,0x6f,0x72,0x74,0x65,0x64,0x5f,0x69,0x6e,0x64,
    0x65,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x39,
    0x33,0x20,0x3d,0x20,0x5f,0x31,0x38,0x32,0x20,0x2f,0x20,0x5f,0x31,0x38,0x38,0x5f,
    0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,0x61,0x79,0x65,0x72,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x32,0x30,0x30,0x20,0x3d,
    0x20,0x5f,0x31,0x38,0x32,0x20,0x2d,0x20,0x28,0x5f,0x31,0x39,0x33,0x20,0x2a,0x20,
    0x5f,0x31,0x38,0x38,0x5f,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,
    0x6c,0x61,0x79,0x65,0x72,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,
    0x34,0x20,0x5f,0x32,0x33,0x32,0x20,0x3d,0x20,0x73,0x70,0x6c,0x61,0x74,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x2e,0x4c,0x6f,0x61,0x64,0x28,0x69,0x6e,0x74,0x34,
    0x28,0x69,0x6e,0x74,0x33,0x28,0x5f,0x32,0x30,0x30,0x20,0x25,0x20,0x5f,0x31,0x38,
    0x38,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x77,0x69,0x64,0x74,0x68,0x2c,
    0x20,0x5f,0x32,0x30,0x30,0x20,0x2f,0x20,0x5f,0x31,0x38,0x38,0x5f,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x5f,0x77,0x69,0x64,0x74,0x68,0x2c,0x20,0x5f,0x31,0x39,0x33,
    0x29,0x2c,0x20,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,
    0x20,0x5f,0x32,0x33,0x36,0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x77,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x38,0x20,0x3d,0x20,
    0x5f,0x32,0x33,0x36,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x5f,0x32,0x33,0x38,0x20,0x3c,0x20,0x33,0x75,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x28,0x30,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x32,
    0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x35,0x33,0x20,
    0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,
    0x6e,0x74,0x20,0x5f,0x32,0x36,0x34,0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x39,0x38,0x20,
    0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x36,0x34,0x20,
    0x3e,0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x36,0x34,0x20,0x26,0x20,0x32,0x35,0x35,
    0x75,0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,
    0x38,0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,
    0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,0x30,0x39,0x20,0x3d,0x20,0x6f,0x63,0x74,0x61,
    0x68,0x65,0x64,0x72,0x61,0x6c,0x5f,0x64,0x65,0x63,0x6f,0x64,0x65,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x5f,0x33,0x31,0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,
    0x39,0x38,0x20,0x3e,0x3e,0x20,0x32,0x34,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,
    0x75,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x36,0x31,0x35,0x39,0x39,0x38,0x35,
    0x39,0x30,0x33,0x36,0x35,0x30,0x35,0x32,0x32,0x32,0x33,0x32,0x30,0x35,0x35,0x36,
    0x36,0x34,0x30,0x36,0x32,0x35,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x28,0x5f,0x32,0x33,0x36,0x20,0x3e,0x3e,0x20,0x32,0x34,0x75,0x29,0x20,
    0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,
    0x5f,0x32,0x33,0x36,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,0x32,
    0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x33,
    0x36,0x20,0x3e,0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x33,0x38,0x29,0x29,0x20,0x2a,
    0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,0x33,
    0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,0x31,
    0x32,0x35,0x66,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x5f,0x33,0x30,0x39,0x20,0x2a,0x20,0x73,0x69,0x6e,0x28,0x5f,0x33,0x31,0x33,
    0x29,0x2c,0x20,0x63,0x6f,0x73,0x28,0x5f,0x33,0x31,0x33,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x6d,0x75,0x6c,0x28,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,
    0x28,0x5f,0x31,0x38,0x38,0x5f,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x69,0x6e,
    0x20,0x2b,0x20,0x28,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x28,0x5f,0x32,0x35,0x33,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,
    0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x28,0x5f,0x32,0x35,0x33,0x20,0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x2c,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x36,0x34,0x20,0x3e,0x3e,0x20,
    0x31,0x36,0x75,0x29,0x20,0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x29,0x20,
    0x2a,0x20,0x31,0x2e,0x35,0x32,0x35,0x39,0x30,0x32,0x31,0x38,0x39,0x33,0x31,0x34,
    0x33,0x36,0x35,0x33,0x38,0x36,0x39,0x36,0x32,0x38,0x39,0x30,0x36,0x32,0x35,0x65,
    0x2d,0x30,0x35,0x66,0x29,0x20,0x2a,0x20,0x5f,0x31,0x38,0x38,0x5f,0x62,0x6f,0x75,
    0x6e,0x64,0x73,0x5f,0x73,0x69,0x7a,0x65,0x29,0x29,0x20,0x2b,0x20,0x6d,0x75,0x6c,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x28,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x39,
    0x38,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,
    0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,0x20,0x3e,
    0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x39,0x38,0x20,0x26,0x20,0x32,0x35,0x35,0x75,
    0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x37,
    0x36,0x36,0x32,0x33,0x36,0x33,0x30,0x35,0x32,0x33,0x36,0x38,0x31,0x36,0x34,0x30,
    0x36,0x32,0x35,0x66,0x29,0x20,0x2d,0x20,0x35,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,
    0x29,0x2c,0x20,0x71,0x75,0x61,0x74,0x5f,0x74,0x6f,0x5f,0x6d,0x61,0x74,0x33,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x29,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,
    0x2c,0x20,0x5f,0x31,0x38,0x38,0x5f,0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x29,0x2c,
    0x20,0x5f,0x31,0x38,0x38,0x5f,0x70,0x72,0x6f,0x6a,0x4d,0x61,0x74,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,
    0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,
    0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,
    0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x73,0x6f,0x72,0x74,0x65,
    0x64,0x5f,0x69,0x6e,0x64,0x65,0x78,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,
    0x69,0x6e,0x70,0x75,0x74,0x2e,0x73,0x6f,0x72,0x74,0x65,0x64,0x5f,0x69,0x6e,0x64,
    0x65,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,
    0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,
    0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x71,0x75,0x61,0x64,
    0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,
    0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,
    0x00,
};
/*
    static float2 quad_coord;
    static float4 color;
    static float4 frag_color;

    struct SPIRV_Cross_Input
    {
        float4 color : TEXCOORD0;
        float2 quad_coord : TEXCOORD1;
    };

    struct SPIRV_Cross_Output
    {
        float4 frag_color : SV_Target0;
    };

    void frag_main()
    {
        float _14 = dot(quad_coord, quad_coord);
        if (_14 > 0.25f)
        {
            discard;
        }
        float _34 = clamp(_14 * 4.0f, 0.0f, 1.0f);
        frag_color = float4(color.xyz, (color.w * exp(_14 * (-8.0f))) * (1.0f - ((_34 * _34) * (3.0f - (2.0f * _34)))));
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        quad_coord = stage_input.quad_coord;
        color = stage_input.color;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.frag_color = frag_color;
        return stage_output;
    }
*/
static const uint8_t fs_source_hlsl5[772] = {
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x71,0x75,
    0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,
    0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x71,0x75,
    0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,
    0x4f,0x52,0x44,0x31,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,
    0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3a,0x20,0x53,0x56,
    0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x20,0x3d,
    0x20,0x64,0x6f,0x74,0x28,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x2c,
    0x20,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x34,0x20,0x3e,0x20,0x30,0x2e,0x32,0x35,
    0x66,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x34,0x20,0x3d,0x20,
    0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x31,0x34,0x20,0x2a,0x20,0x34,0x2e,0x30,0x66,
    0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,
    0x2c,0x20,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x20,0x65,0x78,0x70,
    0x28,0x5f,0x31,0x34,0x20,0x2a,0x20,0x28,0x2d,0x38,0x2e,0x30,0x66,0x29,0x29,0x29,
    0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x28,0x28,0x5f,0x33,0x34,
    0x20,0x2a,0x20,0x5f,0x33,0x34,0x29,0x20,0x2a,0x20,0x28,0x33,0x2e,0x30,0x66,0x20,
    0x2d,0x20,0x28,0x32,0x2e,0x30,0x66,0x20,0x2a,0x20,0x5f,0x33,0x34,0x29,0x29,0x29,
    0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x71,0x75,0x61,
    0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,
    0x2e,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,0x50,0x49,
    0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x72,0x61,0x67,
    0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,
    0x0a,0x7d,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"

    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct vs_params
    {
        float4x4 viewMat;
        float4x4 projMat;
        float3 bounds_min;
        float3 bounds_max;
        packed_float3 bounds_size;
        int texture_width;
        int texture_height;
        int splats_per_layer;
    };

    struct main0_out
    {
        float4 color [[user(locn0)]];
        float2 quad_coord [[user(locn1)]];
        float4 gl_Position [[position]];
    };

    struct main0_in
    {
        float2 position [[attribute(0)]];
        uint sorted_index [[attribute(1)]];
    };

    static inline __attribute__((always_inline))
    float3 octahedral_decode(thread float2& f)
    {
        f = (f * 2.0) - float2(1.0);
        float _44 = (1.0 - abs(f.x)) - abs(f.y);
        float3 _45 = float3(f.x, f.y, _44);
        float _52 = fast::max(-_44, 0.0);
        float2 _59 = _45.xy;
        float2 _67 = _59 + select(float2(_52), float2(-_52), _59 >= float2(0.0));
        float3 _421 = _45;
        _421.x = _67.x;
        _421.y = _67.y;
        return fast::normalize(_421);
    }

    static inline __attribute__((always_inline))
    float3x3 quat_to_mat3(thread const float4& q)
    {
        float _81 = q.x * q.x;
        float _87 = q.y * q.y;
        float _93 = q.z * q.z;
        float _99 = q.x * q.z;
        float _105 = q.x * q.y;
        float _111 = q.y * q.z;
        float _118 = q.w * q.x;
        float _124 = q.w * q.y;
        float _130 = q.w * q.z;
        return float3x3(float3(1.0 - (2.0 * (_87 + _93)), 2.0 * (_105 - _130), 2.0 * (_99 + _124)), float3(2.0 * (_105 + _130), 1.0 - (2.0 * (_81 + _93)), 2.0 * (_111 - _118)), float3(2.0 * (_99 - _124), 2.0 * (_111 + _118), 1.0 - (2.0 * (_81 + _87))));
    }

    vertex main0_out main0(main0_in in [[stage_in]], constant vs_params& _188 [[buffer(0)]], texture2d_array<uint> splat_texture [[texture(0)]], sampler splat_sampler [[sampler(2)]])
    {
        main0_out out = {};
        int _182 = int(in.sorted_index);
        int _193 = _182 / _188.splats_per_layer;
        int _200 = _182 - (_193 * _188.splats_per_layer);
        int3 _229 = int3(_200 % _188.texture_width, _200 / _188.texture_width, _193);
        uint4 _232 = splat_texture.read(uint2(_229.xy), uint(_229.z), 0);
        uint _236 = _232.w;
        uint _238 = _236 & 255u;
        if (_238 < 3u)
        {
            out.gl_Position = float4(0.0, 0.0, 2.0, 1.0);
            return out;
        }
        uint _253 = _232.x;
        uint _264 = _232.y;
        uint _298 = _232.z;
        float2 param = float2(float((_264 >> 8u) & 255u), float(_264 & 255u)) * 0.0039215688593685626983642578125;
        float3 _309 = octahedral_decode(param);
        float _313 = float((_298 >> 24u) & 255u) * 0.0061599859036505222320556640625;
        out.color = float4(float((_236 >> 24u) & 255u), float((_236 >> 16u) & 255u), float((_236 >> 8u) & 255u), float(_238)) * 0.0039215688593685626983642578125;
        float4 param_1 = float4(_309 * sin(_313), cos(_313));
        out.gl_Position = _188.projMat * (_188.viewMat * float4((_188.bounds_min + ((float3(float((_253 >> 16u) & 65535u), float(_253 & 65535u), float((_264 >> 16u) & 65535u)) * 1.525902189314365386962890625e-05) * float3(_188.bounds_size))) + (quat_to_mat3(param_1) * (float3(in.position, 0.0) * exp((float3(float((_298 >> 16u) & 255u), float((_298 >> 8u) & 255u), float(_298 & 255u)) * 0.0392156876623630523681640625) - float3(5.0)))), 1.0));
        out.quad_coord = in.position;
        return out;
    }

*/
static const uint8_t vs_source_metal_macos[3294] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x70,0x72,0x6f,0x6a,0x4d,0x61,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x62,0x6f,0x75,0x6e,0x64,
    0x73,0x5f,0x6d,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x61,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x70,0x61,0x63,0x6b,0x65,0x64,0x5f,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x77,0x69,0x64,
    0x74,0x68,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,
    0x61,0x79,0x65,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,
    0x6f,0x6f,0x72,0x64,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,
    0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,
    0x73,0x6f,0x72,0x74,0x65,0x64,0x5f,0x69,0x6e,0x64,0x65,0x78,0x20,0x5b,0x5b,0x61,
    0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,
    0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,
    0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6f,0x63,0x74,0x61,0x68,0x65,0x64,0x72,0x61,
    0x6c,0x5f,0x64,0x65,0x63,0x6f,0x64,0x65,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x26,0x20,0x66,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x20,0x3d,0x20,0x28,0x66,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x28,0x31,
    0x2e,0x30,0x20,0x2d,0x20,0x61,0x62,0x73,0x28,0x66,0x2e,0x78,0x29,0x29,0x20,0x2d,
    0x20,0x61,0x62,0x73,0x28,0x66,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x34,0x35,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x28,0x66,0x2e,0x78,0x2c,0x20,0x66,0x2e,0x79,0x2c,0x20,0x5f,0x34,0x34,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x32,
    0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x2d,0x5f,0x34,
    0x34,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x5f,0x35,0x39,0x20,0x3d,0x20,0x5f,0x34,0x35,0x2e,0x78,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x36,0x37,
    0x20,0x3d,0x20,0x5f,0x35,0x39,0x20,0x2b,0x20,0x73,0x65,0x6c,0x65,0x63,0x74,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x35,0x32,0x29,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x28,0x2d,0x5f,0x35,0x32,0x29,0x2c,0x20,0x5f,0x35,0x39,0x20,0x3e,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x34,0x32,0x31,0x20,
    0x3d,0x20,0x5f,0x34,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,0x32,0x31,0x2e,
    0x78,0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,
    0x34,0x32,0x31,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x34,0x32,0x31,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,
    0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,
    0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,0x78,0x33,0x20,0x71,0x75,0x61,0x74,0x5f,0x74,
    0x6f,0x5f,0x6d,0x61,0x74,0x33,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,
    0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x26,0x20,0x71,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x31,0x20,0x3d,
    0x20,0x71,0x2e,0x78,0x20,0x2a,0x20,0x71,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x37,0x20,0x3d,0x20,0x71,0x2e,0x79,0x20,
    0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x39,0x33,0x20,0x3d,0x20,0x71,0x2e,0x7a,0x20,0x2a,0x20,0x71,0x2e,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x39,0x20,
    0x3d,0x20,0x71,0x2e,0x78,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x35,0x20,0x3d,0x20,0x71,0x2e,
    0x78,0x20,0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x31,0x31,0x20,0x3d,0x20,0x71,0x2e,0x79,0x20,0x2a,0x20,
    0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x31,0x38,0x20,0x3d,0x20,0x71,0x2e,0x77,0x20,0x2a,0x20,0x71,0x2e,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x32,0x34,0x20,
    0x3d,0x20,0x71,0x2e,0x77,0x20,0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x33,0x30,0x20,0x3d,0x20,0x71,0x2e,
    0x77,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x78,0x33,0x28,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,0x2a,
    0x20,0x28,0x5f,0x38,0x37,0x20,0x2b,0x20,0x5f,0x39,0x33,0x29,0x29,0x2c,0x20,0x32,
    0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2d,0x20,0x5f,0x31,0x33,
    0x30,0x29,0x2c,0x20,0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,0x20,0x2b,
    0x20,0x5f,0x31,0x32,0x34,0x29,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2b,0x20,0x5f,0x31,
    0x33,0x30,0x29,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,
    0x2a,0x20,0x28,0x5f,0x38,0x31,0x20,0x2b,0x20,0x5f,0x39,0x33,0x29,0x29,0x2c,0x20,
    0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,0x31,0x20,0x2d,0x20,0x5f,0x31,
    0x31,0x38,0x29,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x32,0x2e,0x30,
    0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,0x20,0x2d,0x20,0x5f,0x31,0x32,0x34,0x29,0x2c,
    0x20,0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,0x31,0x20,0x2b,0x20,0x5f,
    0x31,0x31,0x38,0x29,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,
    0x20,0x2a,0x20,0x28,0x5f,0x38,0x31,0x20,0x2b,0x20,0x5f,0x38,0x37,0x29,0x29,0x29,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x38,0x38,0x20,
    0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x5f,0x61,0x72,0x72,0x61,0x79,0x3c,0x75,
    0x69,0x6e,0x74,0x3e,0x20,0x73,0x70,0x6c,0x61,0x74,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,
    0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x73,0x70,0x6c,0x61,0x74,
    0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x28,0x32,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,
    0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x38,0x32,0x20,
    0x3d,0x20,0x69,0x6e,0x74,0x28,0x69,0x6e,0x2e,0x73,0x6f,0x72,0x74,0x65,0x64,0x5f,
    0x69,0x6e,0x64,0x65,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x5f,0x31,0x39,0x33,0x20,0x3d,0x20,0x5f,0x31,0x38,0x32,0x20,0x2f,0x20,0x5f,0x31,
    0x38,0x38,0x2e,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,0x61,
    0x79,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x32,0x30,
    0x30,0x20,0x3d,0x20,0x5f,0x31,0x38,0x32,0x20,0x2d,0x20,0x28,0x5f,0x31,0x39,0x33,
    0x20,0x2a,0x20,0x5f,0x31,0x38,0x38,0x2e,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,
    0x65,0x72,0x5f,0x6c,0x61,0x79,0x65,0x72,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x6e,0x74,0x33,0x20,0x5f,0x32,0x32,0x39,0x20,0x3d,0x20,0x69,0x6e,0x74,0x33,0x28,
    0x5f,0x32,0x30,0x30,0x20,0x25,0x20,0x5f,0x31,0x38,0x38,0x2e,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x77,0x69,0x64,0x74,0x68,0x2c,0x20,0x5f,0x32,0x30,0x30,0x20,
    0x2f,0x20,0x5f,0x31,0x38,0x38,0x2e,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x77,
    0x69,0x64,0x74,0x68,0x2c,0x20,0x5f,0x31,0x39,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x75,0x69,0x6e,0x74,0x34,0x20,0x5f,0x32,0x33,0x32,0x20,0x3d,0x20,0x73,0x70,
    0x6c,0x61,0x74,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x2e,0x72,0x65,0x61,0x64,
    0x28,0x75,0x69,0x6e,0x74,0x32,0x28,0x5f,0x32,0x32,0x39,0x2e,0x78,0x79,0x29,0x2c,
    0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x32,0x32,0x39,0x2e,0x7a,0x29,0x2c,0x20,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x36,
    0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x38,0x20,0x3d,0x20,0x5f,0x32,0x33,0x36,0x20,
    0x26,0x20,0x32,0x35,0x35,0x75,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x32,0x33,0x38,0x20,0x3c,0x20,0x33,0x75,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x32,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x35,0x33,0x20,0x3d,
    0x20,0x5f,0x32,0x33,0x32,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,
    0x74,0x20,0x5f,0x32,0x36,0x34,0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x39,0x38,0x20,0x3d,
    0x20,0x5f,0x32,0x33,0x32,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x36,0x34,0x20,0x3e,
    0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x36,0x34,0x20,0x26,0x20,0x32,0x35,0x35,0x75,
    0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,
    0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,
    0x35,0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x5f,0x33,0x30,0x39,0x20,0x3d,0x20,0x6f,0x63,0x74,0x61,0x68,0x65,
    0x64,0x72,0x61,0x6c,0x5f,0x64,0x65,0x63,0x6f,0x64,0x65,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,
    0x31,0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,
    0x20,0x3e,0x3e,0x20,0x32,0x34,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,
    0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x36,0x31,0x35,0x39,0x39,0x38,0x35,0x39,0x30,
    0x33,0x36,0x35,0x30,0x35,0x32,0x32,0x32,0x33,0x32,0x30,0x35,0x35,0x36,0x36,0x34,
    0x30,0x36,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x28,0x5f,0x32,0x33,0x36,0x20,0x3e,0x3e,0x20,0x32,0x34,0x75,0x29,
    0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,
    0x28,0x5f,0x32,0x33,0x36,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,
    0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,
    0x33,0x36,0x20,0x3e,0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,
    0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x33,0x38,0x29,0x29,0x20,
    0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,
    0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,
    0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x5f,0x33,0x30,0x39,0x20,0x2a,0x20,0x73,0x69,0x6e,0x28,0x5f,0x33,0x31,0x33,
    0x29,0x2c,0x20,0x63,0x6f,0x73,0x28,0x5f,0x33,0x31,0x33,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x38,0x38,0x2e,0x70,0x72,0x6f,0x6a,0x4d,0x61,
    0x74,0x20,0x2a,0x20,0x28,0x5f,0x31,0x38,0x38,0x2e,0x76,0x69,0x65,0x77,0x4d,0x61,
    0x74,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x28,0x5f,0x31,0x38,0x38,
    0x2e,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x69,0x6e,0x20,0x2b,0x20,0x28,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,
    0x35,0x33,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,0x36,0x35,0x35,
    0x33,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x35,0x33,
    0x20,0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x28,0x5f,0x32,0x36,0x34,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,
    0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x29,0x20,0x2a,0x20,0x31,0x2e,0x35,
    0x32,0x35,0x39,0x30,0x32,0x31,0x38,0x39,0x33,0x31,0x34,0x33,0x36,0x35,0x33,0x38,
    0x36,0x39,0x36,0x32,0x38,0x39,0x30,0x36,0x32,0x35,0x65,0x2d,0x30,0x35,0x29,0x20,
    0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x31,0x38,0x38,0x2e,0x62,0x6f,
    0x75,0x6e,0x64,0x73,0x5f,0x73,0x69,0x7a,0x65,0x29,0x29,0x29,0x20,0x2b,0x20,0x28,
    0x71,0x75,0x61,0x74,0x5f,0x74,0x6f,0x5f,0x6d,0x61,0x74,0x33,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x29,0x20,0x2a,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,0x2e,0x30,
    0x29,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,0x20,0x3e,0x3e,0x20,0x31,
    0x36,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,0x20,0x3e,0x3e,0x20,0x38,0x75,0x29,0x20,
    0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,
    0x32,0x39,0x38,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x29,0x20,0x2a,0x20,0x30,
    0x2e,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x37,0x36,0x36,0x32,0x33,0x36,0x33,
    0x30,0x35,0x32,0x33,0x36,0x38,0x31,0x36,0x34,0x30,0x36,0x32,0x35,0x29,0x20,0x2d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x35,0x2e,0x30,0x29,0x29,0x29,0x29,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,
    0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x69,0x6e,0x2e,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };

    struct main0_in
    {
        float4 color [[user(locn0)]];
        float2 quad_coord [[user(locn1)]];
    };

    fragment main0_out main0(main0_in in [[stage_in]])
    {
        main0_out out = {};
        float _14 = dot(in.quad_coord, in.quad_coord);
        if (_14 > 0.25)
        {
            discard_fragment();
        }
        float _34 = fast::clamp(_14 * 4.0, 0.0, 1.0);
        out.frag_color = float4(in.color.xyz, (in.color.w * exp(_14 * (-8.0))) * (1.0 - ((_34 * _34) * (3.0 - (2.0 * _34)))));
        return out;
    }

*/
static const uint8_t fs_source_metal_macos[607] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x5b,0x5b,0x75,
    0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x20,0x3d,0x20,0x64,
    0x6f,0x74,0x28,0x69,0x6e,0x2e,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,
    0x2c,0x20,0x69,0x6e,0x2e,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x34,0x20,0x3e,0x20,
    0x30,0x2e,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x5f,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x34,0x20,0x3d,0x20,0x66,0x61,
    0x73,0x74,0x3a,0x3a,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x31,0x34,0x20,0x2a,0x20,
    0x34,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x63,
    0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x28,0x69,0x6e,0x2e,0x63,0x6f,
    0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x5f,0x31,0x34,0x20,
    0x2a,0x20,0x28,0x2d,0x38,0x2e,0x30,0x29,0x29,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,
    0x30,0x20,0x2d,0x20,0x28,0x28,0x5f,0x33,0x34,0x20,0x2a,0x20,0x5f,0x33,0x34,0x29,
    0x20,0x2a,0x20,0x28,0x33,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,0x2a,
    0x20,0x5f,0x33,0x34,0x29,0x29,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"

    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct vs_params
    {
        float4x4 viewMat;
        float4x4 projMat;
        float3 bounds_min;
        float3 bounds_max;
        packed_float3 bounds_size;
        int texture_width;
        int texture_height;
        int splats_per_layer;
    };

    struct main0_out
    {
        float4 color [[user(locn0)]];
        float2 quad_coord [[user(locn1)]];
        float4 gl_Position [[position]];
    };

    struct main0_in
    {
        float2 position [[attribute(0)]];
        uint sorted_index [[attribute(1)]];
    };

    static inline __attribute__((always_inline))
    float3 octahedral_decode(thread float2& f)
    {
        f = (f * 2.0) - float2(1.0);
        float _44 = (1.0 - abs(f.x)) - abs(f.y);
        float3 _45 = float3(f.x, f.y, _44);
        float _52 = fast::max(-_44, 0.0);
        float2 _59 = _45.xy;
        float2 _67 = _59 + select(float2(_52), float2(-_52), _59 >= float2(0.0));
        float3 _421 = _45;
        _421.x = _67.x;
        _421.y = _67.y;
        return fast::normalize(_421);
    }

    static inline __attribute__((always_inline))
    float3x3 quat_to_mat3(thread const float4& q)
    {
        float _81 = q.x * q.x;
        float _87 = q.y * q.y;
        float _93 = q.z * q.z;
        float _99 = q.x * q.z;
        float _105 = q.x * q.y;
        float _111 = q.y * q.z;
        float _118 = q.w * q.x;
        float _124 = q.w * q.y;
        float _130 = q.w * q.z;
        return float3x3(float3(1.0 - (2.0 * (_87 + _93)), 2.0 * (_105 - _130), 2.0 * (_99 + _124)), float3(2.0 * (_105 + _130), 1.0 - (2.0 * (_81 + _93)), 2.0 * (_111 - _118)), float3(2.0 * (_99 - _124), 2.0 * (_111 + _118), 1.0 - (2.0 * (_81 + _87))));
    }

    vertex main0_out main0(main0_in in [[stage_in]], constant vs_params& _188 [[buffer(0)]], texture2d_array<uint> splat_texture [[texture(0)]], sampler splat_sampler [[sampler(2)]])
    {
        main0_out out = {};
        int _182 = int(in.sorted_index);
        int _193 = _182 / _188.splats_per_layer;
        int _200 = _182 - (_193 * _188.splats_per_layer);
        int3 _229 = int3(_200 % _188.texture_width, _200 / _188.texture_width, _193);
        uint4 _232 = splat_texture.read(uint2(_229.xy), uint(_229.z), 0);
        uint _236 = _232.w;
        uint _238 = _236 & 255u;
        if (_238 < 3u)
        {
            out.gl_Position = float4(0.0, 0.0, 2.0, 1.0);
            return out;
        }
        uint _253 = _232.x;
        uint _264 = _232.y;
        uint _298 = _232.z;
        float2 param = float2(float((_264 >> 8u) & 255u), float(_264 & 255u)) * 0.0039215688593685626983642578125;
        float3 _309 = octahedral_decode(param);
        float _313 = float((_298 >> 24u) & 255u) * 0.0061599859036505222320556640625;
        out.color = float4(float((_236 >> 24u) & 255u), float((_236 >> 16u) & 255u), float((_236 >> 8u) & 255u), float(_238)) * 0.0039215688593685626983642578125;
        float4 param_1 = float4(_309 * sin(_313), cos(_313));
        out.gl_Position = _188.projMat * (_188.viewMat * float4((_188.bounds_min + ((float3(float((_253 >> 16u) & 65535u), float(_253 & 65535u), float((_264 >> 16u) & 65535u)) * 1.525902189314365386962890625e-05) * float3(_188.bounds_size))) + (quat_to_mat3(param_1) * (float3(in.position, 0.0) * exp((float3(float((_298 >> 16u) & 255u), float((_298 >> 8u) & 255u), float(_298 & 255u)) * 0.0392156876623630523681640625) - float3(5.0)))), 1.0));
        out.quad_coord = in.position;
        return out;
    }

*/
static const uint8_t vs_source_metal_ios[3294] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x70,0x72,0x6f,0x6a,0x4d,0x61,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x62,0x6f,0x75,0x6e,0x64,
    0x73,0x5f,0x6d,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x61,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x70,0x61,0x63,0x6b,0x65,0x64,0x5f,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x77,0x69,0x64,
    0x74,0x68,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,
    0x61,0x79,0x65,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,
    0x6f,0x6f,0x72,0x64,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,
    0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,
    0x73,0x6f,0x72,0x74,0x65,0x64,0x5f,0x69,0x6e,0x64,0x65,0x78,0x20,0x5b,0x5b,0x61,
    0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,
    0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,
    0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6f,0x63,0x74,0x61,0x68,0x65,0x64,0x72,0x61,
    0x6c,0x5f,0x64,0x65,0x63,0x6f,0x64,0x65,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x26,0x20,0x66,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x20,0x3d,0x20,0x28,0x66,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x28,0x31,
    0x2e,0x30,0x20,0x2d,0x20,0x61,0x62,0x73,0x28,0x66,0x2e,0x78,0x29,0x29,0x20,0x2d,
    0x20,0x61,0x62,0x73,0x28,0x66,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x34,0x35,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x28,0x66,0x2e,0x78,0x2c,0x20,0x66,0x2e,0x79,0x2c,0x20,0x5f,0x34,0x34,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x32,
    0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x2d,0x5f,0x34,
    0x34,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x5f,0x35,0x39,0x20,0x3d,0x20,0x5f,0x34,0x35,0x2e,0x78,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x36,0x37,
    0x20,0x3d,0x20,0x5f,0x35,0x39,0x20,0x2b,0x20,0x73,0x65,0x6c,0x65,0x63,0x74,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x35,0x32,0x29,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x28,0x2d,0x5f,0x35,0x32,0x29,0x2c,0x20,0x5f,0x35,0x39,0x20,0x3e,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x34,0x32,0x31,0x20,
    0x3d,0x20,0x5f,0x34,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,0x32,0x31,0x2e,
    0x78,0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,
    0x34,0x32,0x31,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x34,0x32,0x31,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,
    0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,
    0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,0x78,0x33,0x20,0x71,0x75,0x61,0x74,0x5f,0x74,
    0x6f,0x5f,0x6d,0x61,0x74,0x33,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,
    0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x26,0x20,0x71,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x31,0x20,0x3d,
    0x20,0x71,0x2e,0x78,0x20,0x2a,0x20,0x71,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x37,0x20,0x3d,0x20,0x71,0x2e,0x79,0x20,
    0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x39,0x33,0x20,0x3d,0x20,0x71,0x2e,0x7a,0x20,0x2a,0x20,0x71,0x2e,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x39,0x20,
    0x3d,0x20,0x71,0x2e,0x78,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x35,0x20,0x3d,0x20,0x71,0x2e,
    0x78,0x20,0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x31,0x31,0x20,0x3d,0x20,0x71,0x2e,0x79,0x20,0x2a,0x20,
    0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x31,0x38,0x20,0x3d,0x20,0x71,0x2e,0x77,0x20,0x2a,0x20,0x71,0x2e,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x32,0x34,0x20,
    0x3d,0x20,0x71,0x2e,0x77,0x20,0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x33,0x30,0x20,0x3d,0x20,0x71,0x2e,
    0x77,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x78,0x33,0x28,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,0x2a,
    0x20,0x28,0x5f,0x38,0x37,0x20,0x2b,0x20,0x5f,0x39,0x33,0x29,0x29,0x2c,0x20,0x32,
    0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2d,0x20,0x5f,0x31,0x33,
    0x30,0x29,0x2c,0x20,0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,0x20,0x2b,
    0x20,0x5f,0x31,0x32,0x34,0x29,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2b,0x20,0x5f,0x31,
    0x33,0x30,0x29,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,
    0x2a,0x20,0x28,0x5f,0x38,0x31,0x20,0x2b,0x20,0x5f,0x39,0x33,0x29,0x29,0x2c,0x20,
    0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,0x31,0x20,0x2d,0x20,0x5f,0x31,
    0x31,0x38,0x29,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x32,0x2e,0x30,
    0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,0x20,0x2d,0x20,0x5f,0x31,0x32,0x34,0x29,0x2c,
    0x20,0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,0x31,0x20,0x2b,0x20,0x5f,
    0x31,0x31,0x38,0x29,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,
    0x20,0x2a,0x20,0x28,0x5f,0x38,0x31,0x20,0x2b,0x20,0x5f,0x38,0x37,0x29,0x29,0x29,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x38,0x38,0x20,
    0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x5f,0x61,0x72,0x72,0x61,0x79,0x3c,0x75,
    0x69,0x6e,0x74,0x3e,0x20,0x73,0x70,0x6c,0x61,0x74,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,
    0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x73,0x70,0x6c,0x61,0x74,
    0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x28,0x32,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,
    0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x38,0x32,0x20,
    0x3d,0x20,0x69,0x6e,0x74,0x28,0x69,0x6e,0x2e,0x73,0x6f,0x72,0x74,0x65,0x64,0x5f,
    0x69,0x6e,0x64,0x65,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x5f,0x31,0x39,0x33,0x20,0x3d,0x20,0x5f,0x31,0x38,0x32,0x20,0x2f,0x20,0x5f,0x31,
    0x38,0x38,0x2e,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,0x61,
    0x79,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x32,0x30,
    0x30,0x20,0x3d,0x20,0x5f,0x31,0x38,0x32,0x20,0x2d,0x20,0x28,0x5f,0x31,0x39,0x33,
    0x20,0x2a,0x20,0x5f,0x31,0x38,0x38,0x2e,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,
    0x65,0x72,0x5f,0x6c,0x61,0x79,0x65,0x72,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x6e,0x74,0x33,0x20,0x5f,0x32,0x32,0x39,0x20,0x3d,0x20,0x69,0x6e,0x74,0x33,0x28,
    0x5f,0x32,0x30,0x30,0x20,0x25,0x20,0x5f,0x31,0x38,0x38,0x2e,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x77,0x69,0x64,0x74,0x68,0x2c,0x20,0x5f,0x32,0x30,0x30,0x20,
    0x2f,0x20,0x5f,0x31,0x38,0x38,0x2e,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x77,
    0x69,0x64,0x74,0x68,0x2c,0x20,0x5f,0x31,0x39,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x75,0x69,0x6e,0x74,0x34,0x20,0x5f,0x32,0x33,0x32,0x20,0x3d,0x20,0x73,0x70,
    0x6c,0x61,0x74,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x2e,0x72,0x65,0x61,0x64,
    0x28,0x75,0x69,0x6e,0x74,0x32,0x28,0x5f,0x32,0x32,0x39,0x2e,0x78,0x79,0x29,0x2c,
    0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x32,0x32,0x39,0x2e,0x7a,0x29,0x2c,0x20,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x36,
    0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x38,0x20,0x3d,0x20,0x5f,0x32,0x33,0x36,0x20,
    0x26,0x20,0x32,0x35,0x35,0x75,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x32,0x33,0x38,0x20,0x3c,0x20,0x33,0x75,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x32,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x35,0x33,0x20,0x3d,
    0x20,0x5f,0x32,0x33,0x32,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,
    0x74,0x20,0x5f,0x32,0x36,0x34,0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x39,0x38,0x20,0x3d,
    0x20,0x5f,0x32,0x33,0x32,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x36,0x34,0x20,0x3e,
    0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x36,0x34,0x20,0x26,0x20,0x32,0x35,0x35,0x75,
    0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,
    0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,
    0x35,0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x5f,0x33,0x30,0x39,0x20,0x3d,0x20,0x6f,0x63,0x74,0x61,0x68,0x65,
    0x64,0x72,0x61,0x6c,0x5f,0x64,0x65,0x63,0x6f,0x64,0x65,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,
    0x31,0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,
    0x20,0x3e,0x3e,0x20,0x32,0x34,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,
    0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x36,0x31,0x35,0x39,0x39,0x38,0x35,0x39,0x30,
    0x33,0x36,0x35,0x30,0x35,0x32,0x32,0x32,0x33,0x32,0x30,0x35,0x35,0x36,0x36,0x34,
    0x30,0x36,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x28,0x5f,0x32,0x33,0x36,0x20,0x3e,0x3e,0x20,0x32,0x34,0x75,0x29,
    0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,
    0x28,0x5f,0x32,0x33,0x36,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,
    0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,
    0x33,0x36,0x20,0x3e,0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,
    0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x33,0x38,0x29,0x29,0x20,
    0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,
    0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,
    0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x5f,0x33,0x30,0x39,0x20,0x2a,0x20,0x73,0x69,0x6e,0x28,0x5f,0x33,0x31,0x33,
    0x29,0x2c,0x20,0x63,0x6f,0x73,0x28,0x5f,0x33,0x31,0x33,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x38,0x38,0x2e,0x70,0x72,0x6f,0x6a,0x4d,0x61,
    0x74,0x20,0x2a,0x20,0x28,0x5f,0x31,0x38,0x38,0x2e,0x76,0x69,0x65,0x77,0x4d,0x61,
    0x74,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x28,0x5f,0x31,0x38,0x38,
    0x2e,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x69,0x6e,0x20,0x2b,0x20,0x28,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,
    0x35,0x33,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,0x36,0x35,0x35,
    0x33,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x35,0x33,
    0x20,0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x28,0x5f,0x32,0x36,0x34,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,
    0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x29,0x20,0x2a,0x20,0x31,0x2e,0x35,
    0x32,0x35,0x39,0x30,0x32,0x31,0x38,0x39,0x33,0x31,0x34,0x33,0x36,0x35,0x33,0x38,
    0x36,0x39,0x36,0x32,0x38,0x39,0x30,0x36,0x32,0x35,0x65,0x2d,0x30,0x35,0x29,0x20,
    0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x31,0x38,0x38,0x2e,0x62,0x6f,
    0x75,0x6e,0x64,0x73,0x5f,0x73,0x69,0x7a,0x65,0x29,0x29,0x29,0x20,0x2b,0x20,0x28,
    0x71,0x75,0x61,0x74,0x5f,0x74,0x6f,0x5f,0x6d,0x61,0x74,0x33,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x29,0x20,0x2a,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,0x2e,0x30,
    0x29,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,0x20,0x3e,0x3e,0x20,0x31,
    0x36,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,0x20,0x3e,0x3e,0x20,0x38,0x75,0x29,0x20,
    0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,
    0x32,0x39,0x38,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x29,0x20,0x2a,0x20,0x30,
    0x2e,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x37,0x36,0x36,0x32,0x33,0x36,0x33,
    0x30,0x35,0x32,0x33,0x36,0x38,0x31,0x36,0x34,0x30,0x36,0x32,0x35,0x29,0x20,0x2d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x35,0x2e,0x30,0x29,0x29,0x29,0x29,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,
    0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x69,0x6e,0x2e,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };

    struct main0_in
    {
        float4 color [[user(locn0)]];
        float2 quad_coord [[user(locn1)]];
    };

    fragment main0_out main0(main0_in in [[stage_in]])
    {
        main0_out out = {};
        float _14 = dot(in.quad_coord, in.quad_coord);
        if (_14 > 0.25)
        {
            discard_fragment();
        }
        float _34 = fast::clamp(_14 * 4.0, 0.0, 1.0);
        out.frag_color = float4(in.color.xyz, (in.color.w * exp(_14 * (-8.0))) * (1.0 - ((_34 * _34) * (3.0 - (2.0 * _34)))));
        return out;
    }

*/
static const uint8_t fs_source_metal_ios[607] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x5b,0x5b,0x75,
    0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x20,0x3d,0x20,0x64,
    0x6f,0x74,0x28,0x69,0x6e,0x2e,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,
    0x2c,0x20,0x69,0x6e,0x2e,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x34,0x20,0x3e,0x20,
    0x30,0x2e,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x5f,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x34,0x20,0x3d,0x20,0x66,0x61,
    0x73,0x74,0x3a,0x3a,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x31,0x34,0x20,0x2a,0x20,
    0x34,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x63,
    0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x28,0x69,0x6e,0x2e,0x63,0x6f,
    0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x5f,0x31,0x34,0x20,
    0x2a,0x20,0x28,0x2d,0x38,0x2e,0x30,0x29,0x29,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,
    0x30,0x20,0x2d,0x20,0x28,0x28,0x5f,0x33,0x34,0x20,0x2a,0x20,0x5f,0x33,0x34,0x29,
    0x20,0x2a,0x20,0x28,0x33,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,0x2a,
    0x20,0x5f,0x33,0x34,0x29,0x29,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"

    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct vs_params
    {
        float4x4 viewMat;
        float4x4 projMat;
        float3 bounds_min;
        float3 bounds_max;
        packed_float3 bounds_size;
        int texture_width;
        int texture_height;
        int splats_per_layer;
    };

    struct main0_out
    {
        float4 color [[user(locn0)]];
        float2 quad_coord [[user(locn1)]];
        float4 gl_Position [[position]];
    };

    struct main0_in
    {
        float2 position [[attribute(0)]];
        uint sorted_index [[attribute(1)]];
    };

    static inline __attribute__((always_inline))
    float3 octahedral_decode(thread float2& f)
    {
        f = (f * 2.0) - float2(1.0);
        float _44 = (1.0 - abs(f.x)) - abs(f.y);
        float3 _45 = float3(f.x, f.y, _44);
        float _52 = fast::max(-_44, 0.0);
        float2 _59 = _45.xy;
        float2 _67 = _59 + select(float2(_52), float2(-_52), _59 >= float2(0.0));
        float3 _421 = _45;
        _421.x = _67.x;
        _421.y = _67.y;
        return fast::normalize(_421);
    }

    static inline __attribute__((always_inline))
    float3x3 quat_to_mat3(thread const float4& q)
    {
        float _81 = q.x * q.x;
        float _87 = q.y * q.y;
        float _93 = q.z * q.z;
        float _99 = q.x * q.z;
        float _105 = q.x * q.y;
        float _111 = q.y * q.z;
        float _118 = q.w * q.x;
        float _124 = q.w * q.y;
        float _130 = q.w * q.z;
        return float3x3(float3(1.0 - (2.0 * (_87 + _93)), 2.0 * (_105 - _130), 2.0 * (_99 + _124)), float3(2.0 * (_105 + _130), 1.0 - (2.0 * (_81 + _93)), 2.0 * (_111 - _118)), float3(2.0 * (_99 - _124), 2.0 * (_111 + _118), 1.0 - (2.0 * (_81 + _87))));
    }

    vertex main0_out main0(main0_in in [[stage_in]], constant vs_params& _188 [[buffer(0)]], texture2d_array<uint> splat_texture [[texture(0)]], sampler splat_sampler [[sampler(2)]])
    {
        main0_out out = {};
        int _182 = int(in.sorted_index);
        int _193 = _182 / _188.splats_per_layer;
        int _200 = _182 - (_193 * _188.splats_per_layer);
        int3 _229 = int3(_200 % _188.texture_width, _200 / _188.texture_width, _193);
        uint4 _232 = splat_texture.read(uint2(_229.xy), uint(_229.z), 0);
        uint _236 = _232.w;
        uint _238 = _236 & 255u;
        if (_238 < 3u)
        {
            out.gl_Position = float4(0.0, 0.0, 2.0, 1.0);
            return out;
        }
        uint _253 = _232.x;
        uint _264 = _232.y;
        uint _298 = _232.z;
        float2 param = float2(float((_264 >> 8u) & 255u), float(_264 & 255u)) * 0.0039215688593685626983642578125;
        float3 _309 = octahedral_decode(param);
        float _313 = float((_298 >> 24u) & 255u) * 0.0061599859036505222320556640625;
        out.color = float4(float((_236 >> 24u) & 255u), float((_236 >> 16u) & 255u), float((_236 >> 8u) & 255u), float(_238)) * 0.0039215688593685626983642578125;
        float4 param_1 = float4(_309 * sin(_313), cos(_313));
        out.gl_Position = _188.projMat * (_188.viewMat * float4((_188.bounds_min + ((float3(float((_253 >> 16u) & 65535u), float(_253 & 65535u), float((_264 >> 16u) & 65535u)) * 1.525902189314365386962890625e-05) * float3(_188.bounds_size))) + (quat_to_mat3(param_1) * (float3(in.position, 0.0) * exp((float3(float((_298 >> 16u) & 255u), float((_298 >> 8u) & 255u), float(_298 & 255u)) * 0.0392156876623630523681640625) - float3(5.0)))), 1.0));
        out.quad_coord = in.position;
        return out;
    }

*/
static const uint8_t vs_source_metal_sim[3294] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,
    0x20,0x76,0x69,0x65,0x77,0x4d,0x61,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x70,0x72,0x6f,0x6a,0x4d,0x61,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x62,0x6f,0x75,0x6e,0x64,
    0x73,0x5f,0x6d,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x61,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x70,0x61,0x63,0x6b,0x65,0x64,0x5f,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,
    0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x73,0x69,0x7a,0x65,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x69,0x6e,0x74,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x77,0x69,0x64,
    0x74,0x68,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x68,0x65,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x69,0x6e,0x74,0x20,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,
    0x61,0x79,0x65,0x72,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,
    0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,
    0x6f,0x6f,0x72,0x64,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,
    0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x70,
    0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,
    0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,
    0x73,0x6f,0x72,0x74,0x65,0x64,0x5f,0x69,0x6e,0x64,0x65,0x78,0x20,0x5b,0x5b,0x61,
    0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,
    0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,
    0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6f,0x63,0x74,0x61,0x68,0x65,0x64,0x72,0x61,
    0x6c,0x5f,0x64,0x65,0x63,0x6f,0x64,0x65,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x26,0x20,0x66,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x20,0x3d,0x20,0x28,0x66,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x28,0x31,
    0x2e,0x30,0x20,0x2d,0x20,0x61,0x62,0x73,0x28,0x66,0x2e,0x78,0x29,0x29,0x20,0x2d,
    0x20,0x61,0x62,0x73,0x28,0x66,0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x34,0x35,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x28,0x66,0x2e,0x78,0x2c,0x20,0x66,0x2e,0x79,0x2c,0x20,0x5f,0x34,0x34,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x32,
    0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x2d,0x5f,0x34,
    0x34,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x5f,0x35,0x39,0x20,0x3d,0x20,0x5f,0x34,0x35,0x2e,0x78,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x36,0x37,
    0x20,0x3d,0x20,0x5f,0x35,0x39,0x20,0x2b,0x20,0x73,0x65,0x6c,0x65,0x63,0x74,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x35,0x32,0x29,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x28,0x2d,0x5f,0x35,0x32,0x29,0x2c,0x20,0x5f,0x35,0x39,0x20,0x3e,
    0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x34,0x32,0x31,0x20,
    0x3d,0x20,0x5f,0x34,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x34,0x32,0x31,0x2e,
    0x78,0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,
    0x34,0x32,0x31,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x36,0x37,0x2e,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x34,0x32,0x31,0x29,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,
    0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,
    0x28,0x61,0x6c,0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,
    0x0a,0x66,0x6c,0x6f,0x61,0x74,0x33,0x78,0x33,0x20,0x71,0x75,0x61,0x74,0x5f,0x74,
    0x6f,0x5f,0x6d,0x61,0x74,0x33,0x28,0x74,0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,
    0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x26,0x20,0x71,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x31,0x20,0x3d,
    0x20,0x71,0x2e,0x78,0x20,0x2a,0x20,0x71,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x38,0x37,0x20,0x3d,0x20,0x71,0x2e,0x79,0x20,
    0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x39,0x33,0x20,0x3d,0x20,0x71,0x2e,0x7a,0x20,0x2a,0x20,0x71,0x2e,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x39,0x39,0x20,
    0x3d,0x20,0x71,0x2e,0x78,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x35,0x20,0x3d,0x20,0x71,0x2e,
    0x78,0x20,0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x31,0x31,0x20,0x3d,0x20,0x71,0x2e,0x79,0x20,0x2a,0x20,
    0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x31,0x38,0x20,0x3d,0x20,0x71,0x2e,0x77,0x20,0x2a,0x20,0x71,0x2e,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x32,0x34,0x20,
    0x3d,0x20,0x71,0x2e,0x77,0x20,0x2a,0x20,0x71,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x33,0x30,0x20,0x3d,0x20,0x71,0x2e,
    0x77,0x20,0x2a,0x20,0x71,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x78,0x33,0x28,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,0x2a,
    0x20,0x28,0x5f,0x38,0x37,0x20,0x2b,0x20,0x5f,0x39,0x33,0x29,0x29,0x2c,0x20,0x32,
    0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2d,0x20,0x5f,0x31,0x33,
    0x30,0x29,0x2c,0x20,0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,0x20,0x2b,
    0x20,0x5f,0x31,0x32,0x34,0x29,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x30,0x35,0x20,0x2b,0x20,0x5f,0x31,
    0x33,0x30,0x29,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,
    0x2a,0x20,0x28,0x5f,0x38,0x31,0x20,0x2b,0x20,0x5f,0x39,0x33,0x29,0x29,0x2c,0x20,
    0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,0x31,0x20,0x2d,0x20,0x5f,0x31,
    0x31,0x38,0x29,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x32,0x2e,0x30,
    0x20,0x2a,0x20,0x28,0x5f,0x39,0x39,0x20,0x2d,0x20,0x5f,0x31,0x32,0x34,0x29,0x2c,
    0x20,0x32,0x2e,0x30,0x20,0x2a,0x20,0x28,0x5f,0x31,0x31,0x31,0x20,0x2b,0x20,0x5f,
    0x31,0x31,0x38,0x29,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,
    0x20,0x2a,0x20,0x28,0x5f,0x38,0x31,0x20,0x2b,0x20,0x5f,0x38,0x37,0x29,0x29,0x29,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,
    0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x31,0x38,0x38,0x20,
    0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x5f,0x61,0x72,0x72,0x61,0x79,0x3c,0x75,
    0x69,0x6e,0x74,0x3e,0x20,0x73,0x70,0x6c,0x61,0x74,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,
    0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x73,0x70,0x6c,0x61,0x74,
    0x5f,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x28,0x32,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,
    0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x31,0x38,0x32,0x20,
    0x3d,0x20,0x69,0x6e,0x74,0x28,0x69,0x6e,0x2e,0x73,0x6f,0x72,0x74,0x65,0x64,0x5f,
    0x69,0x6e,0x64,0x65,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x5f,0x31,0x39,0x33,0x20,0x3d,0x20,0x5f,0x31,0x38,0x32,0x20,0x2f,0x20,0x5f,0x31,
    0x38,0x38,0x2e,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,0x65,0x72,0x5f,0x6c,0x61,
    0x79,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x32,0x30,
    0x30,0x20,0x3d,0x20,0x5f,0x31,0x38,0x32,0x20,0x2d,0x20,0x28,0x5f,0x31,0x39,0x33,
    0x20,0x2a,0x20,0x5f,0x31,0x38,0x38,0x2e,0x73,0x70,0x6c,0x61,0x74,0x73,0x5f,0x70,
    0x65,0x72,0x5f,0x6c,0x61,0x79,0x65,0x72,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x6e,0x74,0x33,0x20,0x5f,0x32,0x32,0x39,0x20,0x3d,0x20,0x69,0x6e,0x74,0x33,0x28,
    0x5f,0x32,0x30,0x30,0x20,0x25,0x20,0x5f,0x31,0x38,0x38,0x2e,0x74,0x65,0x78,0x74,
    0x75,0x72,0x65,0x5f,0x77,0x69,0x64,0x74,0x68,0x2c,0x20,0x5f,0x32,0x30,0x30,0x20,
    0x2f,0x20,0x5f,0x31,0x38,0x38,0x2e,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x5f,0x77,
    0x69,0x64,0x74,0x68,0x2c,0x20,0x5f,0x31,0x39,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x75,0x69,0x6e,0x74,0x34,0x20,0x5f,0x32,0x33,0x32,0x20,0x3d,0x20,0x73,0x70,
    0x6c,0x61,0x74,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x2e,0x72,0x65,0x61,0x64,
    0x28,0x75,0x69,0x6e,0x74,0x32,0x28,0x5f,0x32,0x32,0x39,0x2e,0x78,0x79,0x29,0x2c,
    0x20,0x75,0x69,0x6e,0x74,0x28,0x5f,0x32,0x32,0x39,0x2e,0x7a,0x29,0x2c,0x20,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x36,
    0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,
    0x69,0x6e,0x74,0x20,0x5f,0x32,0x33,0x38,0x20,0x3d,0x20,0x5f,0x32,0x33,0x36,0x20,
    0x26,0x20,0x32,0x35,0x35,0x75,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x32,0x33,0x38,0x20,0x3c,0x20,0x33,0x75,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x32,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x35,0x33,0x20,0x3d,
    0x20,0x5f,0x32,0x33,0x32,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,
    0x74,0x20,0x5f,0x32,0x36,0x34,0x20,0x3d,0x20,0x5f,0x32,0x33,0x32,0x2e,0x79,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x69,0x6e,0x74,0x20,0x5f,0x32,0x39,0x38,0x20,0x3d,
    0x20,0x5f,0x32,0x33,0x32,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x36,0x34,0x20,0x3e,
    0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x36,0x34,0x20,0x26,0x20,0x32,0x35,0x35,0x75,
    0x29,0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,
    0x38,0x35,0x39,0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,
    0x35,0x37,0x38,0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x5f,0x33,0x30,0x39,0x20,0x3d,0x20,0x6f,0x63,0x74,0x61,0x68,0x65,
    0x64,0x72,0x61,0x6c,0x5f,0x64,0x65,0x63,0x6f,0x64,0x65,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,
    0x31,0x33,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,
    0x20,0x3e,0x3e,0x20,0x32,0x34,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,
    0x20,0x2a,0x20,0x30,0x2e,0x30,0x30,0x36,0x31,0x35,0x39,0x39,0x38,0x35,0x39,0x30,
    0x33,0x36,0x35,0x30,0x35,0x32,0x32,0x32,0x33,0x32,0x30,0x35,0x35,0x36,0x36,0x34,
    0x30,0x36,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x28,0x5f,0x32,0x33,0x36,0x20,0x3e,0x3e,0x20,0x32,0x34,0x75,0x29,
    0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,
    0x28,0x5f,0x32,0x33,0x36,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,
    0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,
    0x33,0x36,0x20,0x3e,0x3e,0x20,0x38,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,
    0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x33,0x38,0x29,0x29,0x20,
    0x2a,0x20,0x30,0x2e,0x30,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x38,0x35,0x39,
    0x33,0x36,0x38,0x35,0x36,0x32,0x36,0x39,0x38,0x33,0x36,0x34,0x32,0x35,0x37,0x38,
    0x31,0x32,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x28,0x5f,0x33,0x30,0x39,0x20,0x2a,0x20,0x73,0x69,0x6e,0x28,0x5f,0x33,0x31,0x33,
    0x29,0x2c,0x20,0x63,0x6f,0x73,0x28,0x5f,0x33,0x31,0x33,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x5f,0x31,0x38,0x38,0x2e,0x70,0x72,0x6f,0x6a,0x4d,0x61,
    0x74,0x20,0x2a,0x20,0x28,0x5f,0x31,0x38,0x38,0x2e,0x76,0x69,0x65,0x77,0x4d,0x61,
    0x74,0x20,0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x28,0x5f,0x31,0x38,0x38,
    0x2e,0x62,0x6f,0x75,0x6e,0x64,0x73,0x5f,0x6d,0x69,0x6e,0x20,0x2b,0x20,0x28,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,
    0x35,0x33,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,0x26,0x20,0x36,0x35,0x35,
    0x33,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,0x32,0x35,0x33,
    0x20,0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x28,0x28,0x5f,0x32,0x36,0x34,0x20,0x3e,0x3e,0x20,0x31,0x36,0x75,0x29,0x20,
    0x26,0x20,0x36,0x35,0x35,0x33,0x35,0x75,0x29,0x29,0x20,0x2a,0x20,0x31,0x2e,0x35,
    0x32,0x35,0x39,0x30,0x32,0x31,0x38,0x39,0x33,0x31,0x34,0x33,0x36,0x35,0x33,0x38,
    0x36,0x39,0x36,0x32,0x38,0x39,0x30,0x36,0x32,0x35,0x65,0x2d,0x30,0x35,0x29,0x20,
    0x2a,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x31,0x38,0x38,0x2e,0x62,0x6f,
    0x75,0x6e,0x64,0x73,0x5f,0x73,0x69,0x7a,0x65,0x29,0x29,0x29,0x20,0x2b,0x20,0x28,
    0x71,0x75,0x61,0x74,0x5f,0x74,0x6f,0x5f,0x6d,0x61,0x74,0x33,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x29,0x20,0x2a,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,0x2e,0x30,
    0x29,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,0x20,0x3e,0x3e,0x20,0x31,
    0x36,0x75,0x29,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x28,0x5f,0x32,0x39,0x38,0x20,0x3e,0x3e,0x20,0x38,0x75,0x29,0x20,
    0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x5f,
    0x32,0x39,0x38,0x20,0x26,0x20,0x32,0x35,0x35,0x75,0x29,0x29,0x20,0x2a,0x20,0x30,
    0x2e,0x30,0x33,0x39,0x32,0x31,0x35,0x36,0x38,0x37,0x36,0x36,0x32,0x33,0x36,0x33,
    0x30,0x35,0x32,0x33,0x36,0x38,0x31,0x36,0x34,0x30,0x36,0x32,0x35,0x29,0x20,0x2d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x35,0x2e,0x30,0x29,0x29,0x29,0x29,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,
    0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x69,0x6e,0x2e,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct main0_out
    {
        float4 frag_color [[color(0)]];
    };

    struct main0_in
    {
        float4 color [[user(locn0)]];
        float2 quad_coord [[user(locn1)]];
    };

    fragment main0_out main0(main0_in in [[stage_in]])
    {
        main0_out out = {};
        float _14 = dot(in.quad_coord, in.quad_coord);
        if (_14 > 0.25)
        {
            discard_fragment();
        }
        float _34 = fast::clamp(_14 * 4.0, 0.0, 1.0);
        out.frag_color = float4(in.color.xyz, (in.color.w * exp(_14 * (-8.0))) * (1.0 - ((_34 * _34) * (3.0 - (2.0 * _34)))));
        return out;
    }

*/
static const uint8_t fs_source_metal_sim[607] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x5b,0x5b,0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,
    0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x20,0x5b,0x5b,0x75,
    0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x34,0x20,0x3d,0x20,0x64,
    0x6f,0x74,0x28,0x69,0x6e,0x2e,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,
    0x2c,0x20,0x69,0x6e,0x2e,0x71,0x75,0x61,0x64,0x5f,0x63,0x6f,0x6f,0x72,0x64,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,0x34,0x20,0x3e,0x20,
    0x30,0x2e,0x32,0x35,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x5f,0x66,0x72,0x61,0x67,
    0x6d,0x65,0x6e,0x74,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x34,0x20,0x3d,0x20,0x66,0x61,
    0x73,0x74,0x3a,0x3a,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x31,0x34,0x20,0x2a,0x20,
    0x34,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x63,
    0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x28,0x69,0x6e,0x2e,0x63,0x6f,
    0x6c,0x6f,0x72,0x2e,0x77,0x20,0x2a,0x20,0x65,0x78,0x70,0x28,0x5f,0x31,0x34,0x20,
    0x2a,0x20,0x28,0x2d,0x38,0x2e,0x30,0x29,0x29,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,
    0x30,0x20,0x2d,0x20,0x28,0x28,0x5f,0x33,0x34,0x20,0x2a,0x20,0x5f,0x33,0x34,0x29,
    0x20,0x2a,0x20,0x28,0x33,0x2e,0x30,0x20,0x2d,0x20,0x28,0x32,0x2e,0x30,0x20,0x2a,
    0x20,0x5f,0x33,0x34,0x29,0x29,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
static inline const sg_shader_desc* quad_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_glsl410;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_source_glsl410;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].glsl_name = "position";
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_UINT;
            desc.attrs[1].glsl_name = "sorted_index";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_MAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "_188.viewMat";
            desc.uniform_blocks[0].glsl_uniforms[1].type = SG_UNIFORMTYPE_MAT4;
            desc.uniform_blocks[0].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[1].glsl_name = "_188.projMat";
            desc.uniform_blocks[0].glsl_uniforms[2].type = SG_UNIFORMTYPE_FLOAT3;
            desc.uniform_blocks[0].glsl_uniforms[2].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[2].glsl_name = "_188.bounds_min";
            desc.uniform_blocks[0].glsl_uniforms[3].type = SG_UNIFORMTYPE_FLOAT3;
            desc.uniform_blocks[0].glsl_uniforms[3].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[3].glsl_name = "_188.bounds_max";
            desc.uniform_blocks[0].glsl_uniforms[4].type = SG_UNIFORMTYPE_FLOAT3;
            desc.uniform_blocks[0].glsl_uniforms[4].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[4].glsl_name = "_188.bounds_size";
            desc.uniform_blocks[0].glsl_uniforms[5].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[0].glsl_uniforms[5].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[5].glsl_name = "_188.texture_width";
            desc.uniform_blocks[0].glsl_uniforms[6].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[0].glsl_uniforms[6].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[6].glsl_name = "_188.texture_height";
            desc.uniform_blocks[0].glsl_uniforms[7].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[0].glsl_uniforms[7].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[7].glsl_name = "_188.splats_per_layer";
            desc.views[1].texture.stage = SG_SHADERSTAGE_VERTEX;
            desc.views[1].texture.image_type = SG_IMAGETYPE_ARRAY;
            desc.views[1].texture.sample_type = SG_IMAGESAMPLETYPE_UINT;
            desc.views[1].texture.multisampled = false;
            desc.samplers[2].stage = SG_SHADERSTAGE_VERTEX;
            desc.samplers[2].sampler_type = SG_SAMPLERTYPE_NONFILTERING;
            desc.texture_sampler_pairs[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.texture_sampler_pairs[0].view_slot = 1;
            desc.texture_sampler_pairs[0].sampler_slot = 2;
            desc.texture_sampler_pairs[0].glsl_name = "splat_texture_splat_sampler";
            desc.label = "quad_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_GLES3) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_glsl310es;
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_source_glsl310es;
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].glsl_name = "position";
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_UINT;
            desc.attrs[1].glsl_name = "sorted_index";
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].glsl_uniforms[0].type = SG_UNIFORMTYPE_MAT4;
            desc.uniform_blocks[0].glsl_uniforms[0].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[0].glsl_name = "_188.viewMat";
            desc.uniform_blocks[0].glsl_uniforms[1].type = SG_UNIFORMTYPE_MAT4;
            desc.uniform_blocks[0].glsl_uniforms[1].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[1].glsl_name = "_188.projMat";
            desc.uniform_blocks[0].glsl_uniforms[2].type = SG_UNIFORMTYPE_FLOAT3;
            desc.uniform_blocks[0].glsl_uniforms[2].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[2].glsl_name = "_188.bounds_min";
            desc.uniform_blocks[0].glsl_uniforms[3].type = SG_UNIFORMTYPE_FLOAT3;
            desc.uniform_blocks[0].glsl_uniforms[3].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[3].glsl_name = "_188.bounds_max";
            desc.uniform_blocks[0].glsl_uniforms[4].type = SG_UNIFORMTYPE_FLOAT3;
            desc.uniform_blocks[0].glsl_uniforms[4].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[4].glsl_name = "_188.bounds_size";
            desc.uniform_blocks[0].glsl_uniforms[5].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[0].glsl_uniforms[5].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[5].glsl_name = "_188.texture_width";
            desc.uniform_blocks[0].glsl_uniforms[6].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[0].glsl_uniforms[6].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[6].glsl_name = "_188.texture_height";
            desc.uniform_blocks[0].glsl_uniforms[7].type = SG_UNIFORMTYPE_INT;
            desc.uniform_blocks[0].glsl_uniforms[7].array_count = 0;
            desc.uniform_blocks[0].glsl_uniforms[7].glsl_name = "_188.splats_per_layer";
            desc.views[1].texture.stage = SG_SHADERSTAGE_VERTEX;
            desc.views[1].texture.image_type = SG_IMAGETYPE_ARRAY;
            desc.views[1].texture.sample_type = SG_IMAGESAMPLETYPE_UINT;
            desc.views[1].texture.multisampled = false;
            desc.samplers[2].stage = SG_SHADERSTAGE_VERTEX;
            desc.samplers[2].sampler_type = SG_SAMPLERTYPE_NONFILTERING;
            desc.texture_sampler_pairs[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.texture_sampler_pairs[0].view_slot = 1;
            desc.texture_sampler_pairs[0].sampler_slot = 2;
            desc.texture_sampler_pairs[0].glsl_name = "splat_texture_splat_sampler";
            desc.label = "quad_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_hlsl5;
            desc.vertex_func.d3d11_target = "vs_5_0";
            desc.vertex_func.entry = "main";
            desc.fragment_func.source = (const char*)fs_source_hlsl5;
            desc.fragment_func.d3d11_target = "ps_5_0";
            desc.fragment_func.entry = "main";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[0].hlsl_sem_name = "TEXCOORD";
            desc.attrs[0].hlsl_sem_index = 0;
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_UINT;
            desc.attrs[1].hlsl_sem_name = "TEXCOORD";
            desc.attrs[1].hlsl_sem_index = 1;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].hlsl_register_b_n = 0;
            desc.views[1].texture.stage = SG_SHADERSTAGE_VERTEX;
            desc.views[1].texture.image_type = SG_IMAGETYPE_ARRAY;
            desc.views[1].texture.sample_type = SG_IMAGESAMPLETYPE_UINT;
            desc.views[1].texture.multisampled = false;
            desc.views[1].texture.hlsl_register_t_n = 0;
            desc.samplers[2].stage = SG_SHADERSTAGE_VERTEX;
            desc.samplers[2].sampler_type = SG_SAMPLERTYPE_NONFILTERING;
            desc.samplers[2].hlsl_register_s_n = 2;
            desc.texture_sampler_pairs[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.texture_sampler_pairs[0].view_slot = 1;
            desc.texture_sampler_pairs[0].sampler_slot = 2;
            desc.label = "quad_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_METAL_MACOS) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_metal_macos;
            desc.vertex_func.entry = "main0";
            desc.fragment_func.source = (const char*)fs_source_metal_macos;
            desc.fragment_func.entry = "main0";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_UINT;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].msl_buffer_n = 0;
            desc.views[1].texture.stage = SG_SHADERSTAGE_VERTEX;
            desc.views[1].texture.image_type = SG_IMAGETYPE_ARRAY;
            desc.views[1].texture.sample_type = SG_IMAGESAMPLETYPE_UINT;
            desc.views[1].texture.multisampled = false;
            desc.views[1].texture.msl_texture_n = 0;
            desc.samplers[2].stage = SG_SHADERSTAGE_VERTEX;
            desc.samplers[2].sampler_type = SG_SAMPLERTYPE_NONFILTERING;
            desc.samplers[2].msl_sampler_n = 2;
            desc.texture_sampler_pairs[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.texture_sampler_pairs[0].view_slot = 1;
            desc.texture_sampler_pairs[0].sampler_slot = 2;
            desc.label = "quad_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_METAL_IOS) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_metal_ios;
            desc.vertex_func.entry = "main0";
            desc.fragment_func.source = (const char*)fs_source_metal_ios;
            desc.fragment_func.entry = "main0";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_UINT;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].msl_buffer_n = 0;
            desc.views[1].texture.stage = SG_SHADERSTAGE_VERTEX;
            desc.views[1].texture.image_type = SG_IMAGETYPE_ARRAY;
            desc.views[1].texture.sample_type = SG_IMAGESAMPLETYPE_UINT;
            desc.views[1].texture.multisampled = false;
            desc.views[1].texture.msl_texture_n = 0;
            desc.samplers[2].stage = SG_SHADERSTAGE_VERTEX;
            desc.samplers[2].sampler_type = SG_SAMPLERTYPE_NONFILTERING;
            desc.samplers[2].msl_sampler_n = 2;
            desc.texture_sampler_pairs[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.texture_sampler_pairs[0].view_slot = 1;
            desc.texture_sampler_pairs[0].sampler_slot = 2;
            desc.label = "quad_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_METAL_SIMULATOR) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vertex_func.source = (const char*)vs_source_metal_sim;
            desc.vertex_func.entry = "main0";
            desc.fragment_func.source = (const char*)fs_source_metal_sim;
            desc.fragment_func.entry = "main0";
            desc.attrs[0].base_type = SG_SHADERATTRBASETYPE_FLOAT;
            desc.attrs[1].base_type = SG_SHADERATTRBASETYPE_UINT;
            desc.uniform_blocks[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.uniform_blocks[0].size = 192;
            desc.uniform_blocks[0].msl_buffer_n = 0;
            desc.views[1].texture.stage = SG_SHADERSTAGE_VERTEX;
            desc.views[1].texture.image_type = SG_IMAGETYPE_ARRAY;
            desc.views[1].texture.sample_type = SG_IMAGESAMPLETYPE_UINT;
            desc.views[1].texture.multisampled = false;
            desc.views[1].texture.msl_texture_n = 0;
            desc.samplers[2].stage = SG_SHADERSTAGE_VERTEX;
            desc.samplers[2].sampler_type = SG_SAMPLERTYPE_NONFILTERING;
            desc.samplers[2].msl_sampler_n = 2;
            desc.texture_sampler_pairs[0].stage = SG_SHADERSTAGE_VERTEX;
            desc.texture_sampler_pairs[0].view_slot = 1;
            desc.texture_sampler_pairs[0].sampler_slot = 2;
            desc.label = "quad_shader";
        }
        return &desc;
    }
    return 0;
}
